/*
 * Copyright (c) 2017, The Linux Foundation. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 *       copyright notice, this list of conditions and the following
 *       disclaimer in the documentation and/or other materials provided
 *       with the distribution.
 *     * Neither the name of The Linux Foundation nor the names of its
 *       contributors may be used to endorse or promote products derived
 *       from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
 * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN
 * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#pragma once

#include <cstdint>

#ifndef ARRAY_SIZE
#define ARRAY_SIZE(a) (sizeof(a) / sizeof((a)[0]))
#endif

#define APP1_MARKER        0xe1
#define EXIF_HEADER        0x45786966
#define TIFF_HEADER        0x002A
#define TIFF_BIG_ENDIAN    0x4D4D
#define ZERO_IFD_OFFSET    0x00000008

#define TOP_LEFT        1
#define TOP_RIGHT       2
#define BOTTOM_RIGHT    3
#define BOTTOM_LEFT     4
#define LEFT_TOP        5
#define RIGHT_TOP       6
#define RIGHT_BOTTOM    7
#define LEFT_BOTTOM     8

static const int32_t tag_type_sizes[11] = {
    0,  /* not applicable */
    1,  /* QMMF_EXIF_BYTE */
    1,  /* QMMF_EXIF_ASCII */
    2,  /* QMMF_EXIF_SHORT */
    4,  /* QMMF_EXIF_LONG */
    8,  /* QMMF_EXIF_RATIONAL */
    0,  /* not applicable */
    1,  /* QMMF_EXIF_UNDEFINED */
    0,  /* not applicable */
    4,  /* QMMF_EXIF_SLONG */
    8,  /* QMMF_EXIF_SRATIONAL */
};

typedef struct {
  uint32_t  num;
  uint32_t  denom;
} qmmf_exif_rat_t;

typedef struct {
  int32_t  num;
  int32_t  denom;
} qmmf_exif_srat_t;

typedef enum {
  QMMF_EXIF_BYTE      = 1,
  QMMF_EXIF_ASCII     = 2,
  QMMF_EXIF_SHORT     = 3,
  QMMF_EXIF_LONG      = 4,
  QMMF_EXIF_RATIONAL  = 5,
  QMMF_EXIF_UNDEFINED = 7,
  QMMF_EXIF_SLONG     = 9,
  QMMF_EXIF_SRATIONAL = 10
} qmmf_exif_tag_type_t;

typedef uint32_t qmmf_exif_tag_id_t;

typedef struct {
  qmmf_exif_tag_type_t type;
  uint8_t copy;
  uint32_t count;
  union {
    char             *_ascii;        /* count indicates string length*/
    uint8_t          *_bytes;        /* count > 1 */
    uint8_t          _byte;          /* count = 1 */
    uint16_t         *_shorts;       /* count > 1 */
    uint16_t         _short;         /* count = 1 */
    uint32_t         *_longs;        /* count > 1 */
    uint32_t         _long;          /* count = 1 */
    qmmf_exif_rat_t  *_rats;         /* count > 1 */
    qmmf_exif_rat_t  _rat;           /* count = 1 */
    uint8_t          *_undefined;    /* count indicates length */
    int32_t          *_slongs;       /* count > 1 */
    int32_t          _slong;         /* count = 1 */
    qmmf_exif_srat_t *_srats;        /* count > 1 */
    qmmf_exif_srat_t _srat;          /* count = 1 */
  } data;
} qmmf_exif_tag_entry_t;

typedef struct {
  qmmf_exif_tag_entry_t entry;
  qmmf_exif_tag_id_t id;
} qmmf_exif_tag_t;

struct ExifTagValues {
  uint16_t orientation;
  qmmf_exif_rat_t exposure_time;
  uint16_t iso_speed;
  qmmf_exif_rat_t focal_length;
  qmmf_exif_rat_t aperture;
  uint16_t awb_mode;
  qmmf_exif_rat_t latitude[3];
  char latitude_reference[2];
  qmmf_exif_rat_t longitude[3];
  char longitude_reference[2];
  qmmf_exif_rat_t altitude;
  char altitude_reference;
  qmmf_exif_rat_t gps_timestamp[3];
  char gps_datestamp[20];
  char gps_processing_method[42];
  uint16_t aeMode;
};

typedef enum {
  /* GPS IFD */
  QMMF_GPS_VERSION_ID = 0,
  QMMF_GPS_LATITUDE_REF,
  QMMF_GPS_LATITUDE,
  QMMF_GPS_LONGITUDE_REF,
  QMMF_GPS_LONGITUDE,
  QMMF_GPS_ALTITUDE_REF,
  QMMF_GPS_ALTITUDE,
  QMMF_GPS_TIMESTAMP,
  QMMF_GPS_SATELLITES,
  QMMF_GPS_STATUS,
  QMMF_GPS_MEASUREMODE,
  QMMF_GPS_DOP,
  QMMF_GPS_SPEED_REF,
  QMMF_GPS_SPEED,
  QMMF_GPS_TRACK_REF,
  QMMF_GPS_TRACK,
  QMMF_GPS_IMGDIRECTION_REF,
  QMMF_GPS_IMGDIRECTION,
  QMMF_GPS_MAPDATUM,
  QMMF_GPS_DESTLATITUDE_REF,
  QMMF_GPS_DESTLATITUDE,
  QMMF_GPS_DESTLONGITUDE_REF,
  QMMF_GPS_DESTLONGITUDE,
  QMMF_GPS_DESTBEARING_REF,
  QMMF_GPS_DESTBEARING,
  QMMF_GPS_DESTDISTANCE_REF,
  QMMF_GPS_DESTDISTANCE,
  QMMF_GPS_PROCESSINGMETHOD,
  QMMF_GPS_AREAINFORMATION,
  QMMF_GPS_DATESTAMP,
  QMMF_GPS_DIFFERENTIAL,

  /* TIFF IFD */
  QMMF_NEW_SUBFILE_TYPE,
  QMMF_SUBFILE_TYPE,
  QMMF_IMAGE_WIDTH,
  QMMF_IMAGE_LENGTH,
  QMMF_BITS_PER_SAMPLE,
  QMMF_COMPRESSION,
  QMMF_PHOTOMETRIC_INTERPRETATION,
  QMMF_THRESH_HOLDING,
  QMMF_CELL_WIDTH,
  QMMF_CELL_HEIGHT,
  QMMF_FILL_ORDER,
  QMMF_DOCUMENT_NAME,
  QMMF_IMAGE_DESCRIPTION,
  QMMF_MAKE,
  QMMF_MODEL,
  QMMF_STRIP_OFFSETS,
  QMMF_ORIENTATION,
  QMMF_SAMPLES_PER_PIXEL,
  QMMF_ROWS_PER_STRIP,
  QMMF_STRIP_BYTE_COUNTS,
  QMMF_MIN_SAMPLE_VALUE,
  QMMF_MAX_SAMPLE_VALUE,
  QMMF_X_RESOLUTION,
  QMMF_Y_RESOLUTION,
  QMMF_PLANAR_CONFIGURATION,
  QMMF_PAGE_NAME,
  QMMF_X_POSITION,
  QMMF_Y_POSITION,
  QMMF_FREE_OFFSET,
  QMMF_FREE_BYTE_COUNTS,
  QMMF_GRAY_RESPONSE_UNIT,
  QMMF_GRAY_RESPONSE_CURVE,
  QMMF_T4_OPTION,
  QMMF_T6_OPTION,
  QMMF_RESOLUTION_UNIT,
  QMMF_PAGE_NUMBER,
  QMMF_TRANSFER_FUNCTION,
  QMMF_SOFTWARE,
  QMMF_DATE_TIME,
  QMMF_ARTIST,
  QMMF_HOST_COMPUTER,
  QMMF_PREDICTOR,
  QMMF_WHITE_POINT,
  QMMF_PRIMARY_CHROMATICITIES,
  QMMF_COLOR_MAP,
  QMMF_HALFTONE_HINTS,
  QMMF_TILE_WIDTH,
  QMMF_TILE_LENGTH,
  QMMF_TILE_OFFSET,
  QMMF_TILE_BYTE_COUNTS,
  QMMF_INK_SET,
  QMMF_INK_NAMES,
  QMMF_NUMBER_OF_INKS,
  QMMF_DOT_RANGE,
  QMMF_TARGET_PRINTER,
  QMMF_EXTRA_SAMPLES,
  QMMF_SAMPLE_FORMAT,
  QMMF_TRANSFER_RANGE,
  QMMF_JPEG_PROC,
  QMMF_JPEG_INTERCHANGE_FORMAT,
  QMMF_JPEG_INTERCHANGE_FORMAT_LENGTH,
  QMMF_JPEG_RESTART_INTERVAL,
  QMMF_JPEG_LOSSLESS_PREDICTORS,
  QMMF_JPEG_POINT_TRANSFORMS,
  QMMF_JPEG_Q_TABLES,
  QMMF_JPEG_DC_TABLES,
  QMMF_JPEG_AC_TABLES,
  QMMF_YCBCR_COEFFICIENTS,
  QMMF_YCBCR_SUB_SAMPLING,
  QMMF_YCBCR_POSITIONING,
  QMMF_REFERENCE_BLACK_WHITE,
  QMMF_GAMMA,
  QMMF_ICC_PROFILE_DESCRIPTOR,
  QMMF_SRGB_RENDERING_INTENT,
  QMMF_IMAGE_TITLE,
  QMMF_COPYRIGHT,
  QMMF_EXIF_IFD,
  QMMF_ICC_PROFILE,
  QMMF_GPS_IFD,

  /* TIFF IFD (Thumbnail) */
  QMMF_TN_IMAGE_WIDTH,
  QMMF_TN_IMAGE_LENGTH,
  QMMF_TN_BITS_PER_SAMPLE,
  QMMF_TN_COMPRESSION,
  QMMF_TN_PHOTOMETRIC_INTERPRETATION,
  QMMF_TN_IMAGE_DESCRIPTION,
  QMMF_TN_MAKE,
  QMMF_TN_MODEL,
  QMMF_TN_STRIP_OFFSETS,
  QMMF_TN_ORIENTATION,
  QMMF_TN_SAMPLES_PER_PIXEL,
  QMMF_TN_ROWS_PER_STRIP,
  QMMF_TN_STRIP_BYTE_COUNTS,
  QMMF_TN_X_RESOLUTION,
  QMMF_TN_Y_RESOLUTION,
  QMMF_TN_PLANAR_CONFIGURATION,
  QMMF_TN_RESOLUTION_UNIT,
  QMMF_TN_TRANSFER_FUNCTION,
  QMMF_TN_SOFTWARE,
  QMMF_TN_DATE_TIME,
  QMMF_TN_ARTIST,
  QMMF_TN_WHITE_POINT,
  QMMF_TN_PRIMARY_CHROMATICITIES,
  QMMF_TN_JPEGINTERCHANGE_FORMAT,
  QMMF_TN_JPEGINTERCHANGE_FORMAT_L,
  QMMF_TN_YCBCR_COEFFICIENTS,
  QMMF_TN_YCBCR_SUB_SAMPLING,
  QMMF_TN_YCBCR_POSITIONING,
  QMMF_TN_REFERENCE_BLACK_WHITE,
  QMMF_TN_COPYRIGHT,

  /* EXIF IFD */
  QMMF_EXPOSURE_TIME,
  QMMF_F_NUMBER,
  QMMF_EXPOSURE_PROGRAM,
  QMMF_SPECTRAL_SENSITIVITY,
  QMMF_ISO_SPEED_RATING,
  QMMF_OECF,
  QMMF_EXIF_VERSION,
  QMMF_EXIF_DATE_TIME_ORIGINAL,
  QMMF_EXIF_DATE_TIME_DIGITIZED,
  QMMF_EXIF_COMPONENTS_CONFIG,
  QMMF_EXIF_COMPRESSED_BITS_PER_PIXEL,
  QMMF_SHUTTER_SPEED,
  QMMF_APERTURE,
  QMMF_BRIGHTNESS,
  QMMF_EXPOSURE_BIAS_VALUE,
  QMMF_MAX_APERTURE,
  QMMF_SUBJECT_DISTANCE,
  QMMF_METERING_MODE,
  QMMF_LIGHT_SOURCE,
  QMMF_FLASH,
  QMMF_FOCAL_LENGTH,
  QMMF_SUBJECT_AREA,
  QMMF_EXIF_MAKER_NOTE,
  QMMF_EXIF_USER_COMMENT,
  QMMF_SUBSEC_TIME,
  QMMF_SUBSEC_TIME_ORIGINAL,
  QMMF_SUBSEC_TIME_DIGITIZED,
  QMMF_EXIF_FLASHPIX_VERSION,
  QMMF_EXIF_COLOR_SPACE,
  QMMF_EXIF_PIXEL_X_DIMENSION,
  QMMF_EXIF_PIXEL_Y_DIMENSION,
  QMMF_RELATED_SOUND_FILE,
  QMMF_INTEROP,
  QMMF_FLASH_ENERGY,
  QMMF_SPATIAL_FREQ_RESPONSE,
  QMMF_FOCAL_PLANE_X_RESOLUTION,
  QMMF_FOCAL_PLANE_Y_RESOLUTION,
  QMMF_FOCAL_PLANE_RESOLUTION_UNIT,
  QMMF_SUBJECT_LOCATION,
  QMMF_EXPOSURE_INDEX,
  QMMF_SENSING_METHOD,
  QMMF_FILE_SOURCE,
  QMMF_SCENE_TYPE,
  QMMF_CFA_PATTERN,
  QMMF_CUSTOM_RENDERED,
  QMMF_EXPOSURE_MODE,
  QMMF_WHITE_BALANCE,
  QMMF_DIGITAL_ZOOM_RATIO,
  QMMF_FOCAL_LENGTH_35MM,
  QMMF_SCENE_CAPTURE_TYPE,
  QMMF_GAIN_CONTROL,
  QMMF_CONTRAST,
  QMMF_SATURATION,
  QMMF_SHARPNESS,
  QMMF_DEVICE_SETTINGS_DESCRIPTION,
  QMMF_SUBJECT_DISTANCE_RANGE,
  QMMF_IMAGE_UID,
  QMMF_PIM,

  QMMF_EXIF_TAG_MAX_OFFSET
} qmmf_exif_tag_offset_t;

/* Below are the supported Tags (ID and structure for their data) */
#define QMMF_CONSTRUCT_TAGID(offset, ID) (offset << 16 | ID)
/**
 * GPS tag version
 * Use QMMF_EXIFTAGTYPE_GPS_VERSION_ID as the exif_tag_type (QMMF_EXIF_BYTE)
 * Count should be 4
 */
#define QMMF_ID_GPS_VERSION_ID 0x0000
#define QMMF_EXIFTAGID_GPS_VERSION_ID \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_VERSION_ID, QMMF_ID_GPS_VERSION_ID)
#define QMMF_EXIFTAGTYPE_GPS_VERSION_ID QMMF_EXIF_BYTE
/**
 * North or South Latitude
 * Use QMMF_EXIFTAGTYPE_GPS_LATITUDE_REF as the exif_tag_type (QMMF_EXIF_ASCII)
 * It should be 2 characters long including the null-terminating character.
 */
#define QMMF_ID_GPS_LATITUDE_REF 0x0001
#define QMMF_EXIFTAGID_GPS_LATITUDE_REF \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_LATITUDE_REF, QMMF_ID_GPS_LATITUDE_REF)
#define QMMF_EXIFTAGTYPE_GPS_LATITUDE_REF QMMF_EXIF_ASCII
/**
 * Latitude
 * Use QMMF_EXIFTAGTYPE_GPS_LATITUDE as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 3
 */
#define QMMF_ID_GPS_LATITUDE 0x0002
#define QMMF_EXIFTAGID_GPS_LATITUDE \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_LATITUDE, QMMF_ID_GPS_LATITUDE)
#define QMMF_EXIFTAGTYPE_GPS_LATITUDE QMMF_EXIF_RATIONAL
/**
 * East or West Longitude
 * Use QMMF_EXIFTAGTYPE_GPS_LONGITUDE_REF as the exif_tag_type (QMMF_EXIF_ASCII)
 * It should be 2 characters long including the null-terminating character.
 */
#define QMMF_ID_GPS_LONGITUDE_REF 0x0003
#define QMMF_EXIFTAGID_GPS_LONGITUDE_REF \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_LONGITUDE_REF, QMMF_ID_GPS_LONGITUDE_REF)
#define QMMF_EXIFTAGTYPE_GPS_LONGITUDE_REF QMMF_EXIF_ASCII
/**
 * Longitude
 * Use QMMF_EXIFTAGTYPE_GPS_LONGITUDE as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 3
 */
#define QMMF_ID_GPS_LONGITUDE 0x0004
#define QMMF_EXIFTAGID_GPS_LONGITUDE \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_LONGITUDE, QMMF_ID_GPS_LONGITUDE)
#define QMMF_EXIFTAGTYPE_GPS_LONGITUDE QMMF_EXIF_RATIONAL
/**
 * Altitude reference
 * Use QMMF_EXIFTAGTYPE_GPS_ALTITUDE_REF as the exif_tag_type (QMMF_EXIF_BYTE)
 */
#define QMMF_ID_GPS_ALTITUDE_REF 0x0005
#define QMMF_EXIFTAGID_GPS_ALTITUDE_REF \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_ALTITUDE_REF, QMMF_ID_GPS_ALTITUDE_REF)
#define QMMF_EXIFTAGTYPE_GPS_ALTITUDE_REF QMMF_EXIF_BYTE
/**
 * Altitude
 * Use QMMF_EXIFTAGTYPE_GPS_ALTITUDE as the exif_tag_type (QMMF_EXIF_RATIONAL)
 */
#define QMMF_ID_GPS_ALTITUDE 0x0006
#define QMMF_EXIFTAGID_GPS_ALTITUDE \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_ALTITUDE, QMMF_ID_GPS_ALTITUDE)
#define QMMF_EXIFTAGTYPE_GPS_ALTITUE QMMF_EXIF_RATIONAL
/**
 * GPS time (atomic clock)
 * Use QMMF_EXIFTAGTYPE_GPS_TIMESTAMP as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 3
 */
#define QMMF_ID_GPS_TIMESTAMP 0x0007
#define QMMF_EXIFTAGID_GPS_TIMESTAMP \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_TIMESTAMP, QMMF_ID_GPS_TIMESTAMP)
#define QMMF_EXIFTAGTYPE_GPS_TIMESTAMP QMMF_EXIF_RATIONAL
/**
 * GPS Satellites
 * Use QMMF_EXIFTAGTYPE_GPS_SATELLITES as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count can be anything.
 */
#define QMMF_ID_GPS_SATELLITES 0x0008
#define QMMF_EXIFTAGID_GPS_SATELLITES \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_SATELLITES, QMMF_ID_GPS_SATELLITES)
#define QMMF_EXIFTAGTYPE_GPS_SATELLITES QMMF_EXIF_ASCII
/**
 * GPS Status
 * Use QMMF_EXIFTAGTYPE_GPS_STATUS as the exif_tag_type (QMMF_EXIF_ASCII)
 * It should be 2 characters long including the null-terminating character.
 * "A" - Measurement in progress
 * "V" - Measurement Interoperability
 * Other - Reserved
 */
#define QMMF_ID_GPS_STATUS 0x0009
#define QMMF_EXIFTAGID_GPS_STATUS \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_STATUS, QMMF_ID_GPS_STATUS)
#define QMMF_EXIFTATTYPE_GPS_STATUS QMMF_EXIF_ASCII
/**
 * GPS Measure Mode
 * Use QMMF_EXIFTAGTYPE_GPS_MEASUREMODE as the exif_tag_type (QMMF_EXIF_ASCII)
 * It should be 2 characters long including the null-terminating character.
 * "2" - 2-dimensional measurement
 * "3" - 3-dimensional measurement
 * Other - Reserved
 */
#define QMMF_ID_GPS_MEASUREMODE 0x000a
#define QMMF_EXIFTAGID_GPS_MEASUREMODE \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_MEASUREMODE, QMMF_ID_GPS_MEASUREMODE)
#define QMMF_EXIFTAGTYPE_GPS_MEASUREMODE QMMF_EXIF_ASCII
/**
 * GPS Measurement precision (DOP)
 * Use QMMF_EXIFTAGTYPE_GPS_DOP as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 1
 */
#define QMMF_ID_GPS_DOP 0x000b
#define QMMF_EXIFTAGID_GPS_DOP QMMF_CONSTRUCT_TAGID(QMMF_GPS_DOP, QMMF_ID_GPS_DOP)
#define QMMF_EXIFTAGTYPE_GPS_DOP QMMF_EXIF_RATIONAL
/**
 * Speed Unit
 * Use QMMF_EXIFTAGTYPE_GPS_SPEED_REF as the exif_tag_type (QMMF_EXIF_ASCII)
 * It should be 2 characters long including the null-terminating character.
 * "K" - Kilometers per hour
 * "M" - Miles per hour
 * "N" - Knots
 * Other - Reserved
 */
#define QMMF_ID_GPS_SPEED_REF 0x000c
#define QMMF_EXIFTAGID_GPS_SPEED_REF \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_SPEED_REF, QMMF_ID_GPS_SPEED_REF)
#define QMMF_EXIFTAGTYPE_GPS_SPEED_REF QMMF_EXIF_ASCII
/**
 * Speed of GPS receiver
 * Use QMMF_EXIFTAGTYPE_GPS_SPEED as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 1
 */
#define QMMF_ID_GPS_SPEED 0x000d
#define QMMF_EXIFTAGID_GPS_SPEED \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_SPEED, QMMF_ID_GPS_SPEED)
#define QMMF_EXIFTAGTYPE_GPS_SPEED QMMF_EXIF_RATIONAL
/**
 * Reference of direction of movement
 * Use QMMF_EXIFTAGTYPE_GPS_TRACK_REF as the exif_tag_type (QMMF_EXIF_ASCII)
 * It should be 2 characters long including the null-terminating character.
 * "T" - True direction
 * "M" - Magnetic direction
 * Other - Reserved
 */
#define QMMF_ID_GPS_TRACK_REF 0x000e
#define QMMF_EXIFTAGID_GPS_TRACK_REF \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_TRACK_REF, QMMF_ID_GPS_TRACK_REF)
#define QMMF_EXIFTAGTYPE_GPS_TRACK_REF QMMF_EXIF_ASCII
/**
 * Direction of movement
 * Use QMMF_EXIFTAGTYPE_GPS_TRACK as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 1.
 */
#define QMMF_ID_GPS_TRACK 0x000f
#define QMMF_EXIFTAGID_GPS_TRACK \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_TRACK, QMMF_ID_GPS_TRACK)
#define QMMF_EXIFTAGTYPE_GPS_TRACK QMMF_EXIF_RATIONAL
/**
 * Reference of direction of image
 * Use QMMF_EXIFTAGTYPE_GPS_IMGDIRECTION_REF as the exif_tag_type (QMMF_EXIF_ASCII)
 * It should be 2 characters long including the null-terminating character.
 * "T" - True direction
 * "M" - Magnetic direction
 * Other - Reserved
 */
#define QMMF_ID_GPS_IMGDIRECTION_REF 0x0010
#define QMMF_EXIFTAGID_GPS_IMGDIRECTION_REF \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_IMGDIRECTION_REF, QMMF_ID_GPS_IMGDIRECTION_REF)
#define QMMF_EXIFTAGTYPE_GPS_IMGDIRECTION_REF QMMF_EXIF_ASCII
/**
 * Direction of image
 * Use QMMF_EXIFTAGTYPE_GPS_IMGDIRECTION as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 1
 */
#define QMMF_ID_GPS_IMGDIRECTION 0x0011
#define QMMF_EXIFTAGID_GPS_IMGDIRECTION \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_IMGDIRECTION, QMMF_ID_GPS_IMGDIRECTION)
#define QMMF_EXIFTAGTYPE_GPS_IMGDIRECTION QMMF_EXIF_RATIONAL
/**
 * Geodetic survey data used
 * Use QMMF_EXIFTAGTYPE_GPS_MAPDATUM as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count can be any
 */
#define QMMF_ID_GPS_MAPDATUM 0x0012
#define QMMF_EXIFTAGID_GPS_MAPDATUM \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_MAPDATUM, QMMF_ID_GPS_MAPDATUM)
#define QMMF_EXIFTAGTYPE_GPS_MAPDATUM QMMF_EXIF_ASCII
/**
 * Reference for latitude of destination
 * Use QMMF_EXIFTAGTYPE_GPS_DESTLATITUDE_REF as the exif_tag_type (QMMF_EXIF_ASCII)
 * It should be 2 characters long including the null-terminating character.
 * "N" - North latitude
 * "S" - South latitude
 * Other - Reserved
 */
#define QMMF_ID_GPS_DESTLATITUDE_REF 0x0013
#define QMMF_EXIFTAGID_GPS_DESTLATITUDE_REF \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_DESTLATITUDE_REF, QMMF_ID_GPS_DESTLATITUDE_REF)
#define QMMF_EXIFTAGTYPE_GPS_DESTLATITUDE_REF QMMF_EXIF_ASCII
/**
 * Latitude of destination
 * Use QMMF_EXIFTAGTYPE_GPS_DESTLATITUDE as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 3
 */
#define QMMF_ID_GPS_DESTLATITUDE 0x0014
#define QMMF_EXIFTAGID_GPS_DESTLATITUDE \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_DESTLATITUDE, QMMF_ID_GPS_DESTLATITUDE)
#define QMMF_EXIFTAGTYPE_GPS_DESTLATITUDE QMMF_EXIF_RATIONAL
/**
 * Reference for longitude of destination
 * Use QMMF_EXIFTAGTYPE_GPS_DESTLONGITUDE_REF as the exif_tag_type (QMMF_EXIF_ASCII)
 * It should be 2 characters long including the null-terminating character.
 * "E" - East longitude
 * "W" - West longitude
 * Other - Reserved
 */
#define QMMF_ID_GPS_DESTLONGITUDE_REF 0x0015
#define QMMF_EXIFTAGID_GPS_DESTLONGITUDE_REF \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_DESTLONGITUDE_REF, QMMF_ID_GPS_DESTLONGITUDE_REF)
#define QMMF_EXIFTAGTYPE_GPS_DESTLONGITUDE_REF QMMF_EXIF_ASCII
/**
 * Longitude of destination
 * Use QMMF_EXIFTAGTYPE_GPS_DESTLONGITUDE as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 3
 */
#define QMMF_ID_GPS_DESTLONGITUDE 0x0016
#define QMMF_EXIFTAGID_GPS_DESTLONGITUDE \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_DESTLONGITUDE, QMMF_ID_GPS_DESTLONGITUDE)
#define QMMF_EXIFTAGTYPE_GPS_DESTLONGITUDE QMMF_EXIF_RATIONAL
/**
 * Reference for bearing of destination
 * Use QMMF_EXIFTAGTYPE_GPS_DESTBEARING_REF as the exif_tag_type (QMMF_EXIF_ASCII)
 * It should be 2 characters long including the null-terminating character.
 * "T" - True direction
 * "M" - Magnetic direction
 * Other - Reserved
 */
#define QMMF_ID_GPS_DESTBEARING_REF 0x0017
#define QMMF_EXIFTAGID_GPS_DESTBEARING_REF \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_DESTBEARING_REF, QMMF_ID_GPS_DESTBEARING_REF)
#define QMMF_EXIFTAGTYPE_GPS_DESTBEARING_REF QMMF_EXIF_ASCII
/**
 * Bearing of destination
 * Use QMMF_EXIFTAGTYPE_GPS_DESTBEARING as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 1
 */
#define QMMF_ID_GPS_DESTBEARING 0x0018
#define QMMF_EXIFTAGID_GPS_DESTBEARING \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_DESTBEARING, QMMF_ID_GPS_DESTBEARING)
#define QMMF_EXIFTAGTYPE_GPS_DESTBEARING QMMF_EXIF_RATIONAL
/**
 * Reference for distance to destination
 * Use QMMF_EXIFTAGTYPE_GPS_DESTDISTANCE_REF as the exif_tag_type (QMMF_EXIF_ASCII)
 * It should be 2 characters long including the null-terminating character.
 * "K" - Kilometers per hour
 * "M" - Miles per hour
 * "N" - Knots
 * Other - Reserved
 */
#define QMMF_ID_GPS_DESTDISTANCE_REF 0x0019
#define QMMF_EXIFTAGID_GPS_DESTDISTANCE_REF \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_DESTDISTANCE_REF, QMMF_ID_GPS_DESTDISTANCE_REF)
#define QMMF_EXIFTAGTYPE_GPS_DESTDISTANCE_REF QMMF_EXIF_ASCII
/**
 * Distance to destination
 * Use QMMF_EXIFTAGTYPE_GPS_DESTDISTANCE as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 1
 */
#define QMMF_ID_GPS_DESTDISTANCE 0x001a
#define QMMF_EXIFTAGID_GPS_DESTDISTANCE \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_DESTDISTANCE, QMMF_ID_GPS_DESTDISTANCE)
#define QMMF_EXIFTAGTYPE_GPS_DESTDISTANCE QMMF_EXIF_RATIONAL
/**
 * Name of GPS processing method
 * Use QMMF_EXIFTAGTYPE_GPS_PROCESSINGMETHOD as the exif_tag_type (QMMF_EXIF_UNDEFINED)
 * Count can be any
 */
#define QMMF_ID_GPS_PROCESSINGMETHOD 0x001b
#define QMMF_EXIFTAGID_GPS_PROCESSINGMETHOD \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_PROCESSINGMETHOD, QMMF_ID_GPS_PROCESSINGMETHOD)
#define QMMF_EXIFTAGTYPE_GPS_PROCESSINGMETHOD QMMF_EXIF_UNDEFINED
/**
 * Name of GPS area
 * Use QMMF_EXIFTAGTYPE_GPS_AREAINFORMATION as the exif_tag_type (QMMF_EXIF_UNDEFINED)
 * Count can be any
 */
#define QMMF_ID_GPS_AREAINFORMATION 0x001c
#define QMMF_EXIFTAGID_GPS_AREAINFORMATION \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_AREAINFORMATION, QMMF_ID_GPS_AREAINFORMATION)
#define QMMF_EXIFTAGTYPE_GPS_AREAINFORMATION QMMF_EXIF_UNDEFINED
/**
 * GPS date
 * Use QMMF_EXIFTAGTYPE_GPS_DATESTAMP as the exif_tag_type (QMMF_EXIF_ASCII)
 * It should be 11 characters long including the null-terminating character.
 */
#define QMMF_ID_GPS_DATESTAMP 0x001d
#define QMMF_EXIFTAGID_GPS_DATESTAMP \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_DATESTAMP, QMMF_ID_GPS_DATESTAMP)
#define QMMF_EXIFTAGTYPE_GPS_DATESTAMP QMMF_EXIF_ASCII
/**
 * GPS differential correction
 * Use QMMF_EXIFTAGTYPE_GPS_DIFFERENTIAL as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 * 0 - Measurement without differential correction
 * 1 - Differential correction applied
 * Other - Reserved
 */
#define QMMF_ID_GPS_DIFFERENTIAL 0x001e
#define QMMF_EXIFTAGID_GPS_DIFFERENTIAL \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_DIFFERENTIAL, QMMF_ID_GPS_DIFFERENTIAL)
#define QMMF_EXIFTAGTYPE_GPS_DIFFERENTIAL QMMF_EXIF_SHORT
/**
 * Image width
 * Use QMMF_EXIFTAGTYPE_IMAGE_WIDTH as the exif_tag_type (QMMF_EXIF_LONG)
 * Count should be 1
 */
#define QMMF_ID_IMAGE_WIDTH 0x0100
#define QMMF_EXIFTAGID_IMAGE_WIDTH \
    QMMF_CONSTRUCT_TAGID(QMMF_IMAGE_WIDTH, QMMF_ID_IMAGE_WIDTH)
#define QMMF_EXIFTAGTYPE_IMAGE_WIDTH QMMF_EXIF_LONG
/**
 * Image height
 * Use QMMF_EXIFTAGTYPE_IMAGE_LENGTH as the exif_tag_type (QMMF_EXIF_SHORT_OR_LONG)
 * Count should be 1
 */
#define QMMF_ID_IMAGE_LENGTH 0x0101
#define QMMF_EXIFTAGID_IMAGE_LENGTH \
    QMMF_CONSTRUCT_TAGID(QMMF_IMAGE_LENGTH, QMMF_ID_IMAGE_LENGTH)
#define QMMF_EXIFTAGTYPE_IMAGE_LENGTH QMMF_EXIF_LONG
/**
 * Number of bits per component
 * Use QMMF_EXIFTAGTYPE_BITS_PER_SAMPLE as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_BITS_PER_SAMPLE 0x0102
#define QMMF_EXIFTAGID_BITS_PER_SAMPLE \
    QMMF_CONSTRUCT_TAGID(QMMF_BITS_PER_SAMPLE, QMMF_ID_BITS_PER_SAMPLE)
#define QMMF_EXIFTAGTYPE_BITS_PER_SAMPLE QMMF_EXIF_SHORT
/**
 * Compression scheme
 * Use QMMF_EXIFTAGTYPE_COMPRESSION as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_COMPRESSION 0x0103
#define QMMF_EXIFTAGID_COMPRESSION \
    QMMF_CONSTRUCT_TAGID(QMMF_COMPRESSION, QMMF_ID_COMPRESSION)
#define QMMF_EXIFTAGTYPE_COMPRESSION QMMF_EXIF_SHORT
/**
 * Pixel composition
 * Use QMMF_EXIFTAGTYPE_PHOTOMETRIC_INTERPRETATION as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_PHOTOMETRIC_INTERPRETATION 0x0106
#define QMMF_EXIFTAGID_PHOTOMETRIC_INTERPRETATION \
    QMMF_CONSTRUCT_TAGID(QMMF_PHOTOMETRIC_INTERPRETATION, \
            QMMF_ID_PHOTOMETRIC_INTERPRETATION)
#define QMMF_EXIFTAGTYPE_PHOTOMETRIC_INTERPRETATION QMMF_EXIF_SHORT
/**
 * Thresholding
 * Use QMMF_EXIFTAGTYPE_THRESH_HOLDING as the exif_tag_type (QMMF_EXIF_SHORT)
 *
 * 1 = No dithering or halftoning
 * 2 = Ordered dither or halftone
 * 3 = Randomized dither
 */
#define QMMF_ID_THRESH_HOLDING 0x0107
#define QMMF_EXIFTAGID_THRESH_HOLDING \
    QMMF_CONSTRUCT_TAGID(QMMF_THRESH_HOLDING, QMMF_ID_THRESH_HOLDING)
#define QMMF_EXIFTAGTYPE_THRESH_HOLDING QMMF_EXIF_SHORT
/**
 * Cell Width
 * Use QMMF_EXIFTAGTYPE_CELL_WIDTH as the exif_tag_type (QMMF_EXIF_SHORT)
 */
#define QMMF_ID_CELL_WIDTH 0x0108
#define QMMF_EXIFTAGID_CELL_WIDTH \
    QMMF_CONSTRUCT_TAGID(QMMF_CELL_WIDTH, QMMF_ID_CELL_WIDTH)
#define QMMF_EXIFTAGTYPE_CELL_WIDTH QMMF_EXIF_SHORT
/**
 * Cell Height
 * Use QMMF_EXIFTAGTYPE_CELL_HEIGHT as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_CELL_HEIGHT 0x0109
#define QMMF_EXIFTAGID_CELL_HEIGHT \
    QMMF_CONSTRUCT_TAGID(QMMF_CELL_HEIGHT, QMMF_ID_CELL_HEIGHT)
#define QMMF_EXIFTAGTYPE_CELL_HEIGHT QMMF_EXIF_SHORT
/**
 * Fill Order
 * Use QMMF_EXIFTAGTYPE_FILL_ORDER as the exif_tag_type (QMMF_EXIF_SHORT)
 *  1 = Normal
 *  2 = Reversed
 */
#define QMMF_ID_FILL_ORDER 0x010A
#define QMMF_EXIFTAGID_FILL_ORDER \
    QMMF_CONSTRUCT_TAGID(QMMF_FILL_ORDER, QMMF_ID_FILL_ORDER)
#define QMMF_EXIFTAGTYPE_FILL_ORDER QMMF_EXIF_SHORT
/**
 * DOCUMENT NAME
 * Use QMMF_EXIFTAGTYPE_DOCUMENT_NAME as the exif_tag_type (QMMF_EXIF_ASCII)
 */
#define QMMF_ID_DOCUMENT_NAME 0x010D
#define QMMF_EXIFTAGID_DOCUMENT_NAME \
    QMMF_CONSTRUCT_TAGID(QMMF_DOCUMENT_NAME, QMMF_ID_DOCUMENT_NAME)
#define QMMF_EXIFTAGTYPE_DOCUMENT_NAME QMMF_EXIF_ASCII
/**
 * Image title
 * Use QMMF_EXIFTAGTYPE_IMAGE_DESCRIPTION as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count can be any
 */
#define QMMF_ID_IMAGE_DESCRIPTION 0x010e
#define QMMF_EXIFTAGID_IMAGE_DESCRIPTION \
    QMMF_CONSTRUCT_TAGID(QMMF_IMAGE_DESCRIPTION, QMMF_ID_IMAGE_DESCRIPTION)
#define QMMF_EXIFTAGTYPE_IMAGE_DESCRIPTION QMMF_EXIF_ASCII
/**
 * Image input equipment manufacturer
 * Use QMMF_EXIFTAGTYPE_MAKE as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count can be any
 */
#define QMMF_ID_MAKE 0x010f
#define QMMF_EXIFTAGID_MAKE QMMF_CONSTRUCT_TAGID(QMMF_MAKE, QMMF_ID_MAKE)
#define QMMF_EXIFTAGTYPE_MAKE QMMF_EXIF_ASCII
/**
 * Image input equipment model
 * Use QMMF_EXIFTAGTYPE_MODEL as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count can be any
 */
#define QMMF_ID_MODEL 0x0110
#define QMMF_EXIFTAGID_MODEL QMMF_CONSTRUCT_TAGID(QMMF_MODEL, QMMF_ID_MODEL)
#define QMMF_EXIFTAGTYPE_MODEL QMMF_EXIF_ASCII
/**
 * Image data location
 * Use QMMF_EXIFTAGTYPE_STRIP_OFFSETS as the exif_tag_type (QMMF_EXIF_LONG)
 * Count = StripsPerImage                    when PlanarConfiguration = 1
 *       = SamplesPerPixel * StripsPerImage  when PlanarConfiguration = 2
 */
#define QMMF_ID_STRIP_OFFSETS 0x0111
#define QMMF_EXIFTAGID_STRIP_OFFSETS \
    QMMF_CONSTRUCT_TAGID(QMMF_STRIP_OFFSETS, QMMF_ID_STRIP_OFFSETS)
#define QMMF_EXIFTAGTYPE_STRIP_OFFSETS QMMF_EXIF_LONG
/**
 * Orientation of image
 * Use QMMF_EXIFTAGTYPE_ORIENTATION as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_ORIENTATION 0x0112
#define QMMF_EXIFTAGID_ORIENTATION \
    QMMF_CONSTRUCT_TAGID(QMMF_ORIENTATION, QMMF_ID_ORIENTATION)
#define QMMF_EXIFTAGTYPE_ORIENTATION QMMF_EXIF_SHORT
/**
 * Number of components
 * Use QMMF_EXIFTAGTYPE_SAMPLES_PER_PIXEL as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_SAMPLES_PER_PIXEL 0x0115
#define QMMF_EXIFTAGID_SAMPLES_PER_PIXEL \
    QMMF_CONSTRUCT_TAGID(QMMF_SAMPLES_PER_PIXEL, QMMF_ID_SAMPLES_PER_PIXEL)
#define QMMF_EXIFTAGTYPE_SAMPLES_PER_PIXEL QMMF_EXIF_SHORT
/**
 * Number of rows per strip
 * Use QMMF_EXIFTAGTYPE_ROWS_PER_STRIP as the exif_tag_type (QMMF_EXIF_LONG)
 * Count should be 1
 */
#define QMMF_ID_ROWS_PER_STRIP 0x0116
#define QMMF_EXIFTAGID_ROWS_PER_STRIP \
    QMMF_CONSTRUCT_TAGID(QMMF_ROWS_PER_STRIP, QMMF_ID_ROWS_PER_STRIP)
#define QMMF_EXIFTAGTYPE_ROWS_PER_STRIP QMMF_EXIF_LONG
/**
 * Bytes per compressed strip
 * Use QMMF_EXIFTAGTYPE_STRIP_BYTE_COUNTS as the exif_tag_type (QMMF_EXIF_LONG)
 * Count = StripsPerImage                    when PlanarConfiguration = 1
 *       = SamplesPerPixel * StripsPerImage  when PlanarConfiguration = 2
 */
#define QMMF_ID_STRIP_BYTE_COUNTS 0x0117
#define QMMF_EXIFTAGID_STRIP_BYTE_COUNTS \
    QMMF_CONSTRUCT_TAGID(QMMF_STRIP_BYTE_COUNTS, QMMF_ID_STRIP_BYTE_COUNTS)
#define QMMF_EXIFTAGTYPE_STRIP_BYTE_COUNTS QMMF_EXIF_LONG
/**
 * MinSampleValue
 * Use QMMF_EXIFTAGTYPE_MIN_SAMPLE_VALUE as the exif_tag_type (QMMF_EXIF_SHORT)
 */
#define QMMF_ID_MIN_SAMPLE_VALUE 0x0118
#define QMMF_EXIFTAGID_MIN_SAMPLE_VALUE  \
    QMMF_CONSTRUCT_TAGID(QMMF_MIN_SAMPLE_VALUE, QMMF_ID_MIN_SAMPLE_VALUE)
#define QMMF_EXIFTAGTYPE_MIN_SAMPLE_VALUE QMMF_EXIF_SHORT
/**
 * MaxSampleValue
 * Use QMMF_EXIFTAGTYPE_MAX_SAMPLE_VALUE as the exif_tag_type (QMMF_EXIF_SHORT)
 */
#define QMMF_ID_MAX_SAMPLE_VALUE 0x0119
#define QMMF_EXIFTAGID_MAX_SAMPLE_VALUE \
    QMMF_CONSTRUCT_TAGID(QMMF_MAX_SAMPLE_VALUE, QMMF_ID_MAX_SAMPLE_VALUE)
#define QMMF_EXIFTAGTYPE_MAX_SAMPLE_VALUE QMMF_EXIF_SHORT
/**
 * Image resolution in width direction
 * Use QMMF_EXIFTAGTYPE_X_RESOLUTION as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 1
 */
#define QMMF_ID_X_RESOLUTION 0x011a
#define QMMF_EXIFTAGID_X_RESOLUTION \
    QMMF_CONSTRUCT_TAGID(QMMF_X_RESOLUTION, QMMF_ID_X_RESOLUTION)
#define QMMF_EXIFTAGTYPE_X_RESOLUTION QMMF_EXIF_RATIONAL
/**
 * Image resolution in height direction
 * Use QMMF_EXIFTAGTYPE_Y_RESOLUTION as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 1
 */
#define QMMF_ID_Y_RESOLUTION 0x011b
#define QMMF_EXIFTAGID_Y_RESOLUTION \
    QMMF_CONSTRUCT_TAGID(QMMF_Y_RESOLUTION, QMMF_ID_Y_RESOLUTION)
#define QMMF_EXIFTAGTYPE_Y_RESOLUTION QMMF_EXIF_RATIONAL
/**
 * Image data arrangement
 * Use QMMF_EXIFTAGTYPE_PLANAR_CONFIGURATION as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_PLANAR_CONFIGURATION 0x011c
#define QMMF_EXIFTAGID_PLANAR_CONFIGURATION \
    QMMF_CONSTRUCT_TAGID(QMMF_PLANAR_CONFIGURATION, QMMF_ID_PLANAR_CONFIGURATION)
#define QMMF_EXIFTAGTYPE_PLANAR_CONFIGURATION QMMF_EXIF_SHORT
/**
 * PageName
 * Use QMMF_EXIFTAGTYPE_PAGE_NAME as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count should be 1
 */
#define QMMF_ID_PAGE_NAME 0x011d
#define QMMF_EXIFTAGID_PAGE_NAME \
    QMMF_CONSTRUCT_TAGID(QMMF_PAGE_NAME, QMMF_ID_PAGE_NAME)
#define QMMF_EXIFTAGTYPE_PAGE_NAME QMMF_EXIF_ASCII
/**
 * XPosition
 * Use QMMF_EXIFTAGTYPE_X_POSITION as the exif_tag_type (QMMF_EXIF_RATIONAL)
 */
#define QMMF_ID_X_POSITION 0x011e
#define QMMF_EXIFTAGID_X_POSITION \
    QMMF_CONSTRUCT_TAGID(QMMF_X_POSITION, QMMF_ID_X_POSITION)
#define QMMF_EXIFTAGTYPE_X_POSITION QMMF_EXIF_RATIONAL
/**
 * YPosition
 * Use QMMF_EXIFTAGTYPE_Y_POSITION as the exif_tag_type (QMMF_EXIF_RATIONAL)
 */
#define QMMF_ID_Y_POSITION 0x011f
#define QMMF_EXIFTAGID_Y_POSITION \
    QMMF_CONSTRUCT_TAGID(QMMF_Y_POSITION, QMMF_ID_Y_POSITION)
#define QMMF_EXIFTAGTYPE_Y_POSITION QMMF_EXIF_RATIONAL
/**
 * FREE_OFFSET
 * Use QMMF_EXIFTAGTYPE_FREE_OFFSET as the exif_tag_type (QMMF_EXIF_LONG)
 */
#define QMMF_ID_FREE_OFFSET 0x0120
#define QMMF_EXIFTAGID_FREE_OFFSET \
    QMMF_CONSTRUCT_TAGID(QMMF_FREE_OFFSET, QMMF_ID_FREE_OFFSET)
#define QMMF_EXIFTAGTYPE_FREE_OFFSET QMMF_EXIF_LONG
/**
 * FREE_BYTE_COUNTS
 * Use QMMF_EXIFTAGTYPE_FREE_BYTE_COUNTS as the exif_tag_type (QMMF_EXIF_LONG)
 */
#define QMMF_ID_FREE_BYTE_COUNTS 0x0121
#define QMMF_EXIFTAGID_FREE_BYTE_COUNTS \
    QMMF_CONSTRUCT_TAGID(QMMF_FREE_BYTE_COUNTS, QMMF_ID_FREE_BYTE_COUNTS)
#define QMMF_EXIFTAGTYPE_FREE_BYTE_COUNTS QMMF_EXIF_LONG
/**
 * GrayResponseUnit
 * Use QMMF_EXIFTAGTYPE_GRAY_RESPONSE_UNIT as the exif_tag_type (QMMF_EXIF_SHORT)
 */
#define QMMF_ID_GRAY_RESPONSE_UNIT 0x0122
#define QMMF_EXIFTAGID_GRAY_RESPONSE_UNIT \
    QMMF_CONSTRUCT_TAGID(QMMF_GRAY_RESPONSE_UNIT, QMMF_ID_GRAY_RESPONSE_UNIT)
#define QMMF_EXIFTAGTYPE_GRAY_RESPONSE_UNIT QMMF_EXIF_SHORT
/**
 * GrayResponseCurve
 * Use QMMF_EXIFTAGTYPE_GRAY_RESPONSE_CURVE  as the exif_tag_type (QMMF_EXIF_SHORT)
 */
#define QMMF_ID_GRAY_RESPONSE_CURVE 0x0123
#define QMMF_EXIFTAGID_GRAY_RESPONSE_CURVE \
    QMMF_CONSTRUCT_TAGID(QMMF_GRAY_RESPONSE_CURVE , QMMF_ID_GRAY_RESPONSE_CURVE )
#define QMMF_EXIFTAGTYPE_GRAY_RESPONSE_CURVE QMMF_EXIF_SHORT
/**
 * T4_OPTION
 * Use QMMF_EXIFTAGTYPE_T4_OPTION as the exif_tag_type (QMMF_EXIF_LONG)
 */
#define QMMF_ID_T4_OPTION  0x0124
#define QMMF_EXIFTAGID_T4_OPTION \
    QMMF_CONSTRUCT_TAGID(QMMF_T4_OPTION, QMMF_ID_T4_OPTION)
#define QMMF_EXIFTAGTYPE_T4_OPTION QMMF_EXIF_LONG
/**
 * T6_OPTION
 * Use QMMF_EXIFTAGTYPE_T6_OPTION as the exif_tag_type (QMMF_EXIF_LONG)
 */
#define QMMF_ID_T6_OPTION 0x0125
#define QMMF_EXIFTAGID_T6_OPTION \
    QMMF_CONSTRUCT_TAGID(QMMF_T6_OPTION, QMMF_ID_T6_OPTION)
#define QMMF_EXIFTAGTYPE_T6_OPTION QMMF_EXIF_LONG
/**
 * Unit of X and Y resolution
 * Use QMMF_EXIFTAGTYPE_RESOLUTION_UNIT as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_RESOLUTION_UNIT 0x0128
#define QMMF_EXIFTAGID_RESOLUTION_UNIT \
    QMMF_CONSTRUCT_TAGID(QMMF_RESOLUTION_UNIT, QMMF_ID_RESOLUTION_UNIT)
#define QMMF_EXIFTAGTYPE_RESOLUTION_UNIT QMMF_EXIF_SHORT
/**
 * Page Number
 * Use QMMF_EXIFTAGTYPE_PAGE_NUMBER  as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_PAGE_NUMBER 0x0129
#define QMMF_EXIFTAGID_PAGE_NUMBER \
    QMMF_CONSTRUCT_TAGID(QMMF_PAGE_NUMBER, QMMF_ID_PAGE_NUMBER)
#define QMMF_EXIFTAGTYPE_PAGE_NUMBER QMMF_EXIF_SHORT
/**
 * Transfer function
 * Use QMMF_EXIFTAGTYPE_TRANSFER_FUNCTION as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 3*256
 */
#define QMMF_ID_TRANSFER_FUNCTION 0x012d
#define QMMF_EXIFTAGID_TRANSFER_FUNCTION \
    QMMF_CONSTRUCT_TAGID(QMMF_TRANSFER_FUNCTION, QMMF_ID_TRANSFER_FUNCTION)
#define QMMF_EXIFTAGTYPE_TRANSFER_FUNCTION QMMF_EXIF_SHORT
/**
 * Software used
 * Use QMMF_EXIFTAGTYPE_SOFTWARE as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count can be any
 */
#define QMMF_ID_SOFTWARE 0x0131
#define QMMF_EXIFTAGID_SOFTWARE \
    QMMF_CONSTRUCT_TAGID(QMMF_SOFTWARE, QMMF_ID_SOFTWARE)
#define QMMF_EXIFTAGTYPE_SOFTWARE QMMF_EXIF_ASCII
/**
 * File change date and time
 * Use QMMF_EXIFTAGTYPE_DATE_TIME as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count should be 20
 */
#define QMMF_ID_DATE_TIME 0x0132
#define QMMF_EXIFTAGID_DATE_TIME \
    QMMF_CONSTRUCT_TAGID(QMMF_DATE_TIME, QMMF_ID_DATE_TIME)
#define QMMF_EXIFTAGTYPE_DATE_TIME QMMF_EXIF_ASCII
/**
 * ARTIST, person who created this image
 * Use QMMF_EXIFTAGTYPE_ARTIST as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count can be any
 */
#define QMMF_ID_ARTIST 0x013b
#define QMMF_EXIFTAGID_ARTIST QMMF_CONSTRUCT_TAGID(QMMF_ARTIST, QMMF_ID_ARTIST)
#define QMMF_EXIFTAGTYPE_ARTIST QMMF_EXIF_ASCII
/**
 * Host Computer Name
 * Use QMMF_EXIFTAGTYPE_HOST_COMPUTER as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count can be any
 */
#define QMMF_ID_HOST_COMPUTER 0x013c
#define QMMF_EXIFTAGID_HOST_COMPUTER \
    QMMF_CONSTRUCT_TAGID(QMMF_HOST_COMPUTER , QMMF_ID_HOST_COMPUTER )
#define QMMF_EXIFTAGTYPE_HOST_COMPUTER QMMF_EXIF_ASCII
/**
 * Predictor
 * Use QMMF_EXIFTAGTYPE_PREDICTOR as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count can be any
 */
#define QMMF_ID_PREDICTOR 0x013d
#define QMMF_EXIFTAGID_PREDICTOR \
    QMMF_CONSTRUCT_TAGID(QMMF_PREDICTOR , QMMF_ID_PREDICTOR )
#define QMMF_EXIFTAGTYPE_PREDICTOR QMMF_EXIF_SHORT
/**
 * White point chromaticity
 * Use QMMF_EXIFTAGTYPE_WHITE_POINT as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 2
 */
#define QMMF_ID_WHITE_POINT 0x013e
#define QMMF_EXIFTAGID_WHITE_POINT \
    QMMF_CONSTRUCT_TAGID(QMMF_WHITE_POINT, QMMF_ID_WHITE_POINT)
#define QMMF_EXIFTAGTYPE_WHITE_POINT QMMF_EXIF_RATIONAL
/**
 * Chromaticities of primaries
 * Use QMMF_EXIFTAGTYPE_PRIMARY_CHROMATICITIES as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 6
 */
#define QMMF_ID_PRIMARY_CHROMATICITIES 0x013f
#define QMMF_EXIFTAGID_PRIMARY_CHROMATICITIES \
    QMMF_CONSTRUCT_TAGID(QMMF_PRIMARY_CHROMATICITIES, \
            QMMF_ID_PRIMARY_CHROMATICITIES)
#define QMMF_EXIFTAGTYPE_PRIMARY_CHROMATICITIES QMMF_EXIF_RATIONAL
/**
 * COLOR_MAP
 * Use QMMF_EXIFTAGTYPE_COLOR_MAP as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 6
 */
#define QMMF_ID_COLOR_MAP 0x0140
#define QMMF_EXIFTAGID_COLOR_MAP \
    QMMF_CONSTRUCT_TAGID(QMMF_COLOR_MAP, QMMF_ID_COLOR_MAP)
#define QMMF_EXIFTAGTYPE_COLOR_MAP QMMF_EXIF_SHORT
/**
 * HALFTONE_HINTS
 * Use QMMF_EXIFTAGTYPE_HALFTONE_HINTS as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 6
 */
#define QMMF_ID_HALFTONE_HINTS 0x0141
#define QMMF_EXIFTAGID_HALFTONE_HINTS \
    QMMF_CONSTRUCT_TAGID(QMMF_HALFTONE_HINTS, QMMF_ID_HALFTONE_HINTS)
#define QMMF_EXIFTAGTYPE_HALFTONE_HINTS QMMF_EXIF_SHORT
/**
 * TILE_WIDTH
 * Use QMMF_EXIFTAGTYPE_TILE_WIDTH as the exif_tag_type (QMMF_EXIF_LONG)
 * Count should be 6
 */
#define QMMF_ID_TILE_WIDTH 0x0142
#define QMMF_EXIFTAGID_TILE_WIDTH \
    QMMF_CONSTRUCT_TAGID(QMMF_TILE_WIDTH, QMMF_ID_TILE_WIDTH)
#define QMMF_EXIFTAGTYPE_TILE_WIDTH QMMF_EXIF_LONG
/**
 * TILE_LENGTH
 * Use QMMF_EXIFTAGTYPE_TILE_LENGTH  as the exif_tag_type (QMMF_EXIF_LONG)
 * Count should be 6
 */
#define QMMF_ID_TILE_LENGTH 0x0143
#define QMMF_EXIFTAGID_TILE_LENGTH \
    QMMF_CONSTRUCT_TAGID(QMMF_TILE_LENGTH , QMMF_ID_TILE_LENGTH )
#define QMMF_EXIFTAGTYPE_TILE_LENGTH QMMF_EXIF_LONG
/**
 * TILE_OFFSET
 * Use QMMF_EXIFTAGTYPE_TILE_OFFSET as the exif_tag_type (QMMF_EXIF_LONG)
 */
#define QMMF_ID_TILE_OFFSET 0x0144
#define QMMF_EXIFTAGID_TILE_OFFSET \
    QMMF_CONSTRUCT_TAGID(QMMF_TILE_OFFSET , QMMF_ID_TILE_OFFSET )
#define QMMF_EXIFTAGTYPE_TILE_OFFSET QMMF_EXIF_LONG
/**
 * tile Byte Counts
 * Use QMMF_EXIFTAGTYPE_TILE_OFFSET as the exif_tag_type (QMMF_EXIF_LONG)
 */
#define QMMF_ID_TILE_BYTE_COUNTS 0x0145
#define QMMF_EXIFTAGID_TILE_BYTE_COUNTS  \
    QMMF_CONSTRUCT_TAGID(QMMF_TILE_BYTE_COUNTS  , QMMF_ID_TILE_BYTE_COUNTS  )
#define QMMF_EXIFTAGTYPE_TILE_BYTE_COUNTS QMMF_EXIF_LONG
/**
 * INK_SET
 * Use QMMF_EXIFTAGTYPE_TILE_LENGTH  as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 6
 */
#define QMMF_ID_INK_SET 0x014c
#define QMMF_EXIFTAGID_INK_SET QMMF_CONSTRUCT_TAGID(QMMF_INK_SET , QMMF_ID_INK_SET )
#define QMMF_EXIFTAGTYPE_INK_SET QMMF_EXIF_SHORT
/**
 * INK_NAMES
 * Use QMMF_EXIFTAGTYPE_INK_NAMES  as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count should be 6
 */
#define QMMF_ID_INK_NAMES 0x014D
#define QMMF_EXIFTAGID_INK_NAMES \
    QMMF_CONSTRUCT_TAGID(QMMF_INK_NAMES , QMMF_ID_INK_NAMES)
#define QMMF_EXIFTAGTYPE_INK_NAMES QMMF_EXIF_ASCII
/**
 * NUMBER_OF_INKS
 * Use QMMF_EXIFTAGTYPE_NUMBER_OF_INKS  as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 6
 */
#define QMMF_ID_NUMBER_OF_INKS 0x014e
#define QMMF_EXIFTAGID_NUMBER_OF_INKS \
    QMMF_CONSTRUCT_TAGID(QMMF_NUMBER_OF_INKS , QMMF_ID_NUMBER_OF_INKS )
#define QMMF_EXIFTAGTYPE_NUMBER_OF_INKS QMMF_EXIF_SHORT
/**
 * DOT_RANGE
 * Use QMMF_EXIFTAGTYPE_DOT_RANGE  as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count should be 6
 */
#define QMMF_ID_DOT_RANGE 0x0150
#define QMMF_EXIFTAGID_DOT_RANGE \
    QMMF_CONSTRUCT_TAGID(QMMF_DOT_RANGE , QMMF_ID_DOT_RANGE )
#define QMMF_EXIFTAGTYPE_DOT_RANGE QMMF_EXIF_ASCII
/**
 * TARGET_PRINTER
 * Use QMMF_EXIFTAGTYPE_TARGET_PRINTER  as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count should be 6
 */
#define QMMF_ID_TARGET_PRINTER 0x0151
#define QMMF_EXIFTAGID_TARGET_PRINTER \
    QMMF_CONSTRUCT_TAGID(QMMF_TARGET_PRINTER , QMMF_ID_TARGET_PRINTER)
#define QMMF_EXIFTAGTYPE_TARGET_PRINTER QMMF_EXIF_ASCII
/**
 * EXTRA_SAMPLES
 * Use QMMF_EXIFTAGTYPE_EXTRA_SAMPLES as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 6
 */
#define QMMF_ID_EXTRA_SAMPLES 0x0152
#define QMMF_EXIFTAGID_EXTRA_SAMPLES \
    QMMF_CONSTRUCT_TAGID(QMMF_EXTRA_SAMPLES , QMMF_ID_EXTRA_SAMPLES )
#define QMMF_EXIFTAGTYPE_EXTRA_SAMPLES QMMF_EXIF_SHORT
/**
 * SAMPLE_FORMAT
 * Use QMMF_EXIFTAGTYPE_SAMPLE_FORMAT  as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 6
 */
#define QMMF_ID_SAMPLE_FORMAT 0x0153
#define QMMF_EXIFTAGID_SAMPLE_FORMAT \
    QMMF_CONSTRUCT_TAGID(QMMF_SAMPLE_FORMAT , QMMF_ID_SAMPLE_FORMAT )
#define QMMF_EXIFTAGTYPE_SAMPLE_FORMAT QMMF_EXIF_SHORT
/**
 * Table of values that extends the range of the transfer function.
 * Use QMMF_EXIFTAGTYPE_TRANSFER_RANGE as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 6
 */
#define QMMF_ID_TRANSFER_RANGE 0x0156
#define QMMF_EXIFTAGID_TRANSFER_RANGE \
    QMMF_CONSTRUCT_TAGID(QMMF_TRANSFER_RANGE , QMMF_ID_TRANSFER_RANGE )
#define QMMF_EXIFTAGTYPE_TRANSFER_RANGE QMMF_EXIF_SHORT
/**
 * JPEG compression process.
 * Use QMMF_EXIFTAGTYPE_JPEG_PROC as the exif_tag_type (QMMF_EXIF_SHORT)
 */
#define QMMF_ID_JPEG_PROC 0x0200
#define QMMF_EXIFTAGID_JPEG_PROC \
    QMMF_CONSTRUCT_TAGID(QMMF_JPEG_PROC , QMMF_ID_JPEG_PROC )
#define QMMF_EXIFTAGTYPE_JPEG_PROC QMMF_EXIF_SHORT
/**
 * Offset to JPEG SOI
 * Use QMMF_EXIFTAGTYPE_JPEG_INTERCHANGE_FORMAT as the exif_tag_type (QMMF_EXIF_LONG)
 * Count is undefined
 */
#define QMMF_ID_JPEG_INTERCHANGE_FORMAT 0x0201
#define QMMF_EXIFTAGID_JPEG_INTERCHANGE_FORMAT \
    QMMF_CONSTRUCT_TAGID(QMMF_JPEG_INTERCHANGE_FORMAT, \
            QMMF_ID_JPEG_INTERCHANGE_FORMAT)
#define QMMF_EXIFTAGTYPE_JPEG_INTERCHANGE_FORMAT QMMF_EXIF_LONG
/**
 * Bytes of JPEG data
 * Use QMMF_EXIFTAGTYPE_JPEG_INTERCHANGE_FORMAT_LENGTH as the exif_tag_type (QMMF_EXIF_LONG)
 * Count is undefined
 */
#define QMMF_ID_JPEG_INTERCHANGE_FORMAT_LENGTH 0x0202
#define QMMF_EXIFTAGID_JPEG_INTERCHANGE_FORMAT_LENGTH \
    QMMF_CONSTRUCT_TAGID(QMMF_JPEG_INTERCHANGE_FORMAT_LENGTH, \
    QMMF_ID_JPEG_INTERCHANGE_FORMAT_LENGTH)
#define QMMF_EXIFTAGTYPE_JPEG_INTERCHANGE_FORMAT_LENGTH QMMF_EXIF_LONG
/**
 * Length of the restart interval.
 * Use QMMF_EXIFTAGTYPE_JPEG_RESTART_INTERVAL as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count is undefined
 */
#define QMMF_ID_JPEG_RESTART_INTERVAL 0x0203
#define QMMF_EXIFTAGID_JPEG_RESTART_INTERVAL \
    QMMF_CONSTRUCT_TAGID(QMMF_JPEG_RESTART_INTERVAL, QMMF_ID_JPEG_RESTART_INTERVAL)
#define QMMF_EXIFTAGTYPE_JPEG_RESTART_INTERVAL QMMF_EXIF_SHORT
/**
 * JPEGLosslessPredictors
 * Use QMMF_EXIFTAGTYPE_JPEG_LOSSLESS_PREDICTORS as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count is undefined
 */
#define QMMF_ID_JPEG_LOSSLESS_PREDICTORS 0x0205
#define QMMF_EXIFTAGID_JPEG_LOSSLESS_PREDICTORS  \
    QMMF_CONSTRUCT_TAGID(QMMF_JPEG_LOSSLESS_PREDICTORS, \
            QMMF_ID_JPEG_LOSSLESS_PREDICTORS)
#define QMMF_EXIFTAGTYPE_JPEG_LOSSLESS_PREDICTORS QMMF_EXIF_SHORT
/**
 * JPEGPointTransforms
 * Use QMMF_EXIFTAGTYPE_JPEG_POINT_TRANSFORMS as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count is undefined
 */
#define QMMF_ID_JPEG_POINT_TRANSFORMS 0x0206
#define QMMF_EXIFTAGID_JPEG_POINT_TRANSFORMS  \
    QMMF_CONSTRUCT_TAGID(QMMF_JPEG_POINT_TRANSFORMS, QMMF_ID_JPEG_POINT_TRANSFORMS)
#define QMMF_EXIFTAGTYPE_JPEG_POINT_TRANSFORMS QMMF_EXIF_SHORT
/**
 * JPEG_Q_TABLES
 * Use QMMF_EXIFTAGTYPE_JPEG_Q_TABLES as the exif_tag_type (QMMF_EXIF_LONG)
 * Count is undefined
 */
#define QMMF_ID_JPEG_Q_TABLES 0x0207
#define QMMF_EXIFTAGID_JPEG_Q_TABLES \
    QMMF_CONSTRUCT_TAGID(QMMF_JPEG_Q_TABLES, QMMF_ID_JPEG_Q_TABLES)
#define QMMF_EXIFTAGTYPE_JPEG_Q_TABLES QMMF_EXIF_LONG
/**
 * JPEG_DC_TABLES
 * Use QMMF_EXIFTAGTYPE_JPEG_DC_TABLES as the exif_tag_type (QMMF_EXIF_LONG)
 * Count is undefined
 */
#define QMMF_ID_JPEG_DC_TABLES 0x0208
#define QMMF_EXIFTAGID_JPEG_DC_TABLES \
    QMMF_CONSTRUCT_TAGID(QMMF_JPEG_DC_TABLES, QMMF_ID_JPEG_DC_TABLES)
#define QMMF_EXIFTAGTYPE_JPEG_DC_TABLES QMMF_EXIF_LONG
/**
 * JPEG_AC_TABLES
 * Use QMMF_EXIFTAGTYPE_JPEG_AC_TABLES as the exif_tag_type (QMMF_EXIF_LONG)
 * Count is undefined
 */
#define QMMF_ID_JPEG_AC_TABLES 0x0209
#define QMMF_EXIFTAGID_JPEG_AC_TABLES \
    QMMF_CONSTRUCT_TAGID(QMMF_JPEG_AC_TABLES, QMMF_ID_JPEG_AC_TABLES)
#define QMMF_EXIFTAGTYPE_JPEG_AC_TABLES QMMF_EXIF_LONG
/**
 * Color space transformation matrix coefficients
 * Use QMMF_EXIFTAGTYPE_YCBCR_COEFFICIENTS as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 3
 */
#define QMMF_ID_YCBCR_COEFFICIENTS 0x0211
#define QMMF_EXIFTAGID_YCBCR_COEFFICIENTS \
    QMMF_CONSTRUCT_TAGID(QMMF_YCBCR_COEFFICIENTS, QMMF_ID_YCBCR_COEFFICIENTS)
#define QMMF_EXIFTAGTYPE_YCBCR_COEFFICIENTS QMMF_EXIF_RATIONAL
/**
 * Subsampling ratio of Y to C
 * Use QMMF_EXIFTAGTYPE_YCBCR_SUB_SAMPLING as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 2
 */
#define QMMF_ID_YCBCR_SUB_SAMPLING 0x0212
#define QMMF_EXIFTAGID_YCBCR_SUB_SAMPLING  \
    QMMF_CONSTRUCT_TAGID(QMMF_YCBCR_SUB_SAMPLING, QMMF_ID_YCBCR_SUB_SAMPLING)
#define QMMF_EXIFTAGTYPE_YCBCR_SUB_SAMPLING QMMF_EXIF_SHORT
/**
 * Y and C positioning
 * Use QMMF_EXIFTAGTYPE_YCBCR_POSITIONING as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_YCBCR_POSITIONING 0x0213
#define QMMF_EXIFTAGID_YCBCR_POSITIONING  \
    QMMF_CONSTRUCT_TAGID(QMMF_YCBCR_POSITIONING, QMMF_ID_YCBCR_POSITIONING)
#define QMMF_EXIFTAGTYPE_YCBCR_POSITIONING QMMF_EXIF_SHORT
/**
 * Pair of black and white reference values
 * Use QMMF_EXIFTAGTYPE_REFERENCE_BLACK_WHITE as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 6
 */
#define QMMF_ID_REFERENCE_BLACK_WHITE 0x0214
#define QMMF_EXIFTAGID_REFERENCE_BLACK_WHITE \
    QMMF_CONSTRUCT_TAGID(QMMF_REFERENCE_BLACK_WHITE, QMMF_ID_REFERENCE_BLACK_WHITE)
#define QMMF_EXIFTAGTYPE_REFERENCE_BLACK_WHITE QMMF_EXIF_RATIONAL
/**
 * GAMMA
 * Use QMMF_EXIFTAGTYPE_GAMMA as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 6
 */
#define QMMF_ID_GAMMA 0x0301
#define QMMF_EXIFTAGID_GAMMA QMMF_CONSTRUCT_TAGID(QMMF_GAMMA, QMMF_ID_GAMMA)
#define QMMF_EXIFTAGTYPE_GAMMA QMMF_EXIF_RATIONAL
/**
 * Null-terminated character string that identifies an ICC profile.
 * Use QMMF_EXIFTAGTYPE_ICC_PROFILE_DESCRIPTOR as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count should be 6
 */
#define QMMF_ID_ICC_PROFILE_DESCRIPTOR 0x0302
#define QMMF_EXIFTAGID_ICC_PROFILE_DESCRIPTOR \
    QMMF_CONSTRUCT_TAGID(QMMF_ICC_PROFILE_DESCRIPTOR, \
            QMMF_ID_ICC_PROFILE_DESCRIPTOR)
#define QMMF_EXIFTAGTYPE_ICC_PROFILE_DESCRIPTOR QMMF_EXIF_ASCII
/**
 * SRGB_RENDERING_INTENT
 * Use QMMF_EXIFTAGTYPE_SRGB_RENDERING_INTENT as the exif_tag_type (QMMF_EXIF_BYTE)
 * Count should be 6
 */
#define QMMF_ID_SRGB_RENDERING_INTENT 0x0303
#define QMMF_EXIFTAGID_SRGB_RENDERING_INTENT \
    QMMF_CONSTRUCT_TAGID(QMMF_SRGB_RENDERING_INTENT, QMMF_ID_SRGB_RENDERING_INTENT)
#define QMMF_EXIFTAGTYPE_SRGB_RENDERING_INTENT QMMF_EXIF_BYTE
/**
 * Null-terminated character string that specifies the title of the image.
 * Use QMMF_EXIFTAGTYPE_IMAGE_TITLE as the exif_tag_type (QMMF_EXIF_ASCII)
 */
#define QMMF_ID_IMAGE_TITLE 0x0320
#define QMMF_EXIFTAGID_IMAGE_TITLE \
    QMMF_CONSTRUCT_TAGID(QMMF_IMAGE_TITLE, QMMF_ID_IMAGE_TITLE)
#define QMMF_EXIFTAGTYPE_IMAGE_TITLE QMMF_EXIF_ASCII
/**
 * Copyright holder
 * Use QMMF_EXIFTAGTYPE_COPYRIGHT as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count can be any
 */
#define QMMF_ID_COPYRIGHT 0x8298
#define QMMF_EXIFTAGID_COPYRIGHT \
    QMMF_CONSTRUCT_TAGID(QMMF_COPYRIGHT, QMMF_ID_COPYRIGHT)
#define QMMF_EXIFTAGTYPE_COPYRIGHT QMMF_EXIF_ASCII
/**
 * Old Subfile Type
 * Use QMMF_EXIFTAGTYPE_NEW_SUBFILE_TYPE as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count can be any
 */
#define QMMF_ID_NEW_SUBFILE_TYPE 0x00fe
#define QMMF_EXIFTAGID_NEW_SUBFILE_TYPE \
    QMMF_CONSTRUCT_TAGID(QMMF_NEW_SUBFILE_TYPE, QMMF_ID_NEW_SUBFILE_TYPE)
#define QMMF_EXIFTAGTYPE_NEW_SUBFILE_TYPE QMMF_EXIF_SHORT
/**
 * New Subfile Type
 * Use QMMF_EXIFTAGTYPE_NEW_SUBFILE_TYPE as the exif_tag_type (QMMF_EXIF_LONG)
 * Count can be any
 */
#define QMMF_ID_SUBFILE_TYPE 0x00ff
#define QMMF_EXIFTAGID_SUBFILE_TYPE \
    QMMF_CONSTRUCT_TAGID(QMMF_SUBFILE_TYPE, QMMF_ID_SUBFILE_TYPE)
#define QMMF_EXIFTAGTYPE_SUBFILE_TYPE QMMF_EXIF_LONG
/**
 * Image width (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_IMAGE_WIDTH as the exif_tag_type (QMMF_EXIF_LONG)
 * Count should be 1
 */
#define QMMF_ID_TN_IMAGE_WIDTH 0x0100
#define QMMF_EXIFTAGID_TN_IMAGE_WIDTH \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_IMAGE_WIDTH, QMMF_ID_TN_IMAGE_WIDTH)
#define QMMF_EXIFTAGTYPE_TN_IMAGE_WIDTH QMMF_EXIF_LONG
/**
 * Image height (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_IMAGE_LENGTH as the exif_tag_type (QMMF_EXIF_SHORT_OR_LONG)
 * Count should be 1
 */
#define QMMF_ID_TN_IMAGE_LENGTH 0x0101
#define QMMF_EXIFTAGID_TN_IMAGE_LENGTH \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_IMAGE_LENGTH, QMMF_ID_TN_IMAGE_LENGTH)
#define QMMF_EXIFTAGTYPE_TN_IMAGE_LENGTH QMMF_EXIF_LONG
/**
 * Number of bits per component (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_BITS_PER_SAMPLE as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_TN_BITS_PER_SAMPLE 0x0102
#define QMMF_EXIFTAGID_TN_BITS_PER_SAMPLE \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_BITS_PER_SAMPLE, QMMF_ID_TN_BITS_PER_SAMPLE)
#define QMMF_EXIFTAGTYPE_TN_BITS_PER_SAMPLE QMMF_EXIF_SHORT
/**
 * Compression scheme (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_COMPRESSION as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_TN_COMPRESSION 0x0103
#define QMMF_EXIFTAGID_TN_COMPRESSION \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_COMPRESSION, QMMF_ID_TN_COMPRESSION)
#define QMMF_EXIFTAGTYPE_TN_COMPRESSION QMMF_EXIF_SHORT
/**
 * Pixel composition (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_PHOTOMETRIC_INTERPRETATION as the
 * exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_TN_PHOTOMETRIC_INTERPRETATION 0x0106
#define QMMF_EXIFTAGID_TN_PHOTOMETRIC_INTERPRETATION \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_PHOTOMETRIC_INTERPRETATION, \
    QMMF_ID_TN_PHOTOMETRIC_INTERPRETATION)
#define QMMF_EXIFTAGTYPE_TN_PHOTOMETRIC_INTERPRETATION QMMF_EXIF_SHORT
/**
 * Image title (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_IMAGE_DESCRIPTION as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count can be any
 */
#define QMMF_ID_TN_IMAGE_DESCRIPTION 0x010e
#define QMMF_EXIFTAGID_TN_IMAGE_DESCRIPTION \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_IMAGE_DESCRIPTION, QMMF_ID_TN_IMAGE_DESCRIPTION)
#define QMMF_EXIFTAGTYPE_TN_IMAGE_DESCRIPTION QMMF_EXIF_ASCII
/**
 * Image input equipment manufacturer (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_MAKE as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count can be any
 */
#define QMMF_ID_TN_MAKE 0x010f
#define QMMF_EXIFTAGID_TN_MAKE QMMF_CONSTRUCT_TAGID(QMMF_TN_MAKE, QMMF_ID_TN_MAKE)
#define QMMF_EXIFTAGTYPE_TN_MAKE QMMF_EXIF_ASCII
/**
 * Image input equipment model (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_MODEL as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count can be any
 */
#define QMMF_ID_TN_MODEL 0x0110
#define QMMF_EXIFTAGID_TN_MODEL \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_MODEL, QMMF_ID_TN_MODEL)
#define QMMF_EXIFTAGTYPE_TN_MODEL QMMF_EXIF_ASCII
/**
 * Image data location (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_STRIP_OFFSETS as the exif_tag_type (QMMF_EXIF_LONG)
 * Count = StripsPerImage                    when PlanarConfiguration = 1
 *       = SamplesPerPixel * StripsPerImage  when PlanarConfiguration = 2
 */
#define QMMF_ID_TN_STRIP_OFFSETS 0x0111
#define QMMF_EXIFTAGID_TN_STRIP_OFFSETS \
    QMMF_CONSTRUCT_TAGID(QMMF_STRIP_TN_OFFSETS, QMMF_ID_TN_STRIP_OFFSETS)
#define QMMF_EXIFTAGTYPE_TN_STRIP_OFFSETS QMMF_EXIF_LONG
/**
 * Orientation of image (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_ORIENTATION as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_TN_ORIENTATION 0x0112
#define QMMF_EXIFTAGID_TN_ORIENTATION \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_ORIENTATION, QMMF_ID_TN_ORIENTATION)
#define QMMF_EXIFTAGTYPE_TN_ORIENTATION QMMF_EXIF_SHORT
/**
 * Number of components (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_SAMPLES_PER_PIXEL as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_TN_SAMPLES_PER_PIXEL 0x0115
#define QMMF_EXIFTAGID_TN_SAMPLES_PER_PIXEL \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_SAMPLES_PER_PIXEL, QMMF_ID_TN_SAMPLES_PER_PIXEL)
#define QMMF_EXIFTAGTYPE_TN_SAMPLES_PER_PIXEL QMMF_EXIF_SHORT
/**
 * Number of rows per strip (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_ROWS_PER_STRIP as the exif_tag_type (QMMF_EXIF_LONG)
 * Count should be 1
 */
#define QMMF_ID_TN_ROWS_PER_STRIP 0x0116
#define QMMF_EXIFTAGID_TN_ROWS_PER_STRIP \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_ROWS_PER_STRIP, QMMF_ID_TN_ROWS_PER_STRIP)
#define QMMF_EXIFTAGTYPE_TN_ROWS_PER_STRIP QMMF_EXIF_LONG
/**
 * Bytes per compressed strip (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_STRIP_BYTE_COUNTS as the exif_tag_type (QMMF_EXIF_LONG)
 * Count = StripsPerImage                    when PlanarConfiguration = 1
 *       = SamplesPerPixel * StripsPerImage  when PlanarConfiguration = 2
 */
#define QMMF_ID_TN_STRIP_BYTE_COUNTS 0x0117
#define QMMF_EXIFTAGID_TN_STRIP_BYTE_COUNTS \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_STRIP_BYTE_COUNTS, QMMF_ID_TN_STRIP_BYTE_COUNTS)
#define QMMF_EXIFTAGTYPE_TN_STRIP_BYTE_COUNTS QMMF_EXIF_LONG
/**
 * Image resolution in width direction (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_X_RESOLUTION as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 1
 */
#define QMMF_ID_TN_X_RESOLUTION 0x011a
#define QMMF_EXIFTAGID_TN_X_RESOLUTION \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_X_RESOLUTION, QMMF_ID_TN_X_RESOLUTION)
#define QMMF_EXIFTAGTYPE_TN_X_RESOLUTION QMMF_EXIF_RATIONAL
/**
 * Image resolution in height direction  (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_Y_RESOLUTION as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 1
 */
#define QMMF_ID_TN_Y_RESOLUTION 0x011b
#define QMMF_EXIFTAGID_TN_Y_RESOLUTION \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_Y_RESOLUTION, QMMF_ID_TN_Y_RESOLUTION)
#define QMMF_EXIFTAGTYPE_TN_Y_RESOLUTION QMMF_EXIF_RATIONAL
/**
 * Image data arrangement (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_PLANAR_CONFIGURATION as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_TN_PLANAR_CONFIGURATION 0x011c
#define QMMF_EXIFTAGID_TN_PLANAR_CONFIGURATION \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_PLANAR_CONFIGURATION, \
            QMMF_ID_TN_PLANAR_CONFIGURATION)
#define QMMF_EXIFTAGTYPE_TN_PLANAR_CONFIGURATION QMMF_EXIF_SHORT
/**
 * Unit of X and Y resolution (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_RESOLUTION_UNIT as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_TN_RESOLUTION_UNIT 0x128
#define QMMF_EXIFTAGID_TN_RESOLUTION_UNIT \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_RESOLUTION_UNIT, QMMF_ID_TN_RESOLUTION_UNIT)
#define QMMF_EXIFTAGTYPE_TN_RESOLUTION_UNIT QMMF_EXIF_SHORT
/**
 * Transfer function (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_TRANSFER_FUNCTION as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 3*256
 */
#define QMMF_ID_TN_TRANSFER_FUNCTION 0x012d
#define QMMF_EXIFTAGID_TN_TRANSFER_FUNCTION \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_TRANSFER_FUNCTION, QMMF_ID_TN_TRANSFER_FUNCTION)
#define QMMF_EXIFTAGTYPE_TN_TRANSFER_FUNCTION QMMF_EXIF_SHORT
/**
 * Software used (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_SOFTWARE as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count can be any
 */
#define QMMF_ID_TN_SOFTWARE 0x0131
#define QMMF_EXIFTAGID_TN_SOFTWARE \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_SOFTWARE, QMMF_ID_TN_SOFTWARE)
#define QMMF_EXIFTAGTYPE_TN_SOFTWARE QMMF_EXIF_ASCII
/**
 * File change date and time (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_DATE_TIME as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count should be 20
 */
#define QMMF_ID_TN_DATE_TIME 0x0132
#define QMMF_EXIFTAGID_TN_DATE_TIME \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_DATE_TIME, QMMF_ID_TN_DATE_TIME)
#define QMMF_EXIFTAGTYPE_TN_DATE_TIME QMMF_EXIF_ASCII
/**
 * ARTIST, person who created this image (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_ARTIST as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count can be any
 */
#define QMMF_ID_TN_ARTIST 0x013b
#define QMMF_EXIFTAGID_TN_ARTIST \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_ARTIST, QMMF_ID_TN_ARTIST)
#define QMMF_EXIFTAGTYPE_TN_ARTIST QMMF_EXIF_ASCII
/**
 * White point chromaticity (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_WHITE_POINT as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 2
 */
#define QMMF_ID_TN_WHITE_POINT 0x013e
#define QMMF_EXIFTAGID_TN_WHITE_POINT \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_WHITE_POINT, QMMF_ID_TN_WHITE_POINT)
#define QMMF_EXIFTAGTYPE_TN_WHITE_POINT QMMF_EXIF_RATIONAL
/**
 * Chromaticities of primaries (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_PRIMARY_CHROMATICITIES as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 6
 */
#define QMMF_ID_TN_PRIMARY_CHROMATICITIES 0x013f
#define QMMF_EXIFTAGID_TN_PRIMARY_CHROMATICITIES \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_PRIMARY_CHROMATICITIES, \
            QMMF_ID_TN_PRIMARY_CHROMATICITIES)
#define QMMF_EXIFTAGTYPE_TN_PRIMARY_CHROMATICITIES QMMF_EXIF_RATIONAL
/**
 * Offset to JPEG SOI (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_JPEGINTERCHANGE_FORMAT as the exif_tag_type (QMMF_EXIF_LONG)
 * Count is undefined
 */
#define QMMF_ID_TN_JPEGINTERCHANGE_FORMAT 0x0201
#define QMMF_EXIFTAGID_TN_JPEGINTERCHANGE_FORMAT \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_JPEGINTERCHANGE_FORMAT, \
            QMMF_ID_TN_JPEGINTERCHANGE_FORMAT)
#define QMMF_EXIFTAGTYPE_TN_JPEGINTERCHANGE_FORMAT QMMF_EXIF_LONG
/**
 * Bytes of JPEG data (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_JPEGINTERCHANGE_FORMAT_L as the exif_tag_type (QMMF_EXIF_LONG)
 * Count is undefined
 */
#define QMMF_ID_TN_JPEGINTERCHANGE_FORMAT_L 0x0202
#define QMMF_EXIFTAGID_TN_JPEGINTERCHANGE_FORMAT_L \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_JPEGINTERCHANGE_FORMAT_L, \
            QMMF_ID_TN_JPEGINTERCHANGE_FORMAT_L)
#define QMMF_EXIFTAGTYPE_TN_JPEGINTERCHANGE_FORMAT_L QMMF_EXIF_LONG
/**
 * Color space transformation matrix coefficients (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_YCBCR_COEFFICIENTS as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 3
 */
#define QMMF_ID_TN_YCBCR_COEFFICIENTS 0x0211
#define QMMF_EXIFTAGID_TN_YCBCR_COEFFICIENTS \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_YCBCR_COEFFICIENTS, QMMF_ID_TN_YCBCR_COEFFICIENTS)
#define QMMF_EXIFTAGTYPE_TN_YCBCR_COEFFICIENTS QMMF_EXIF_RATIONAL
/**
 * Subsampling ratio of Y to C (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_YCBCR_SUB_SAMPLING as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 2
 */
#define QMMF_ID_TN_YCBCR_SUB_SAMPLING 0x0212
#define QMMF_EXIFTAGID_TN_YCBCR_SUB_SAMPLING \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_YCBCR_SUB_SAMPLING, QMMF_ID_TN_YCBCR_SUB_SAMPLING)
#define QMMF_EXIFTAGTYPE_TN_YCBCR_SUB_SAMPLING QMMF_EXIF_SHORT
/**
 * Y and C positioning (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_YCBCR_POSITIONING as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_TN_YCBCR_POSITIONING 0x0213
#define QMMF_EXIFTAGID_TN_YCBCR_POSITIONING \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_YCBCR_POSITIONING, QMMF_ID_TN_YCBCR_POSITIONING)
#define QMMF_EXIFTAGTYPE_TN_YCBCR_POSITIONING    QMMF_EXIF_SHORT
/**
 * Pair of black and white reference values (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_REFERENCE_BLACK_WHITE as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 6
 */
#define QMMF_ID_TN_REFERENCE_BLACK_WHITE 0x0214
#define QMMF_EXIFTAGID_TN_REFERENCE_BLACK_WHITE \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_REFERENCE_BLACK_WHITE, \
            QMMF_ID_TN_REFERENCE_BLACK_WHITE)
#define QMMF_EXIFTAGTYPE_TN_REFERENCE_BLACK_WHITE QMMF_EXIF_RATIONAL
/**
 * Copyright holder (of thumbnail)
 * Use QMMF_EXIFTAGTYPE_TN_COPYRIGHT as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count can be any
 */
#define QMMF_ID_TN_COPYRIGHT 0x8298
#define QMMF_EXIFTAGID_TN_COPYRIGHT \
    QMMF_CONSTRUCT_TAGID(QMMF_TN_COPYRIGHT, QMMF_ID_TN_COPYRIGHT)
#define QMMF_EXIFTAGTYPE_TN_COPYRIGHT QMMF_EXIF_ASCII
/**
 * Exposure time
 * Use QMMF_EXIFTAGTYPE_EXPOSURE_TIME as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 1
 */
#define QMMF_ID_EXPOSURE_TIME 0x829a
#define QMMF_EXIFTAGID_EXPOSURE_TIME \
    QMMF_CONSTRUCT_TAGID(QMMF_EXPOSURE_TIME, QMMF_ID_EXPOSURE_TIME)
#define QMMF_EXIFTAGTYPE_EXPOSURE_TIME QMMF_EXIF_RATIONAL
/**
 * F number
 * Use QMMF_EXIFTAGTYPE_F_NUMBER as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 1
 */
#define QMMF_ID_F_NUMBER 0x829d
#define QMMF_EXIFTAGID_F_NUMBER \
    QMMF_CONSTRUCT_TAGID(QMMF_F_NUMBER, QMMF_ID_F_NUMBER)
#define QMMF_EXIFTAGTYPE_F_NUMBER QMMF_EXIF_RATIONAL
/* Exif IFD pointer (NOT INTENDED to be accessible to user) */
#define QMMF_ID_EXIF_IFD_PTR 0x8769
#define QMMF_EXIFTAGID_EXIF_IFD_PTR \
    QMMF_CONSTRUCT_TAGID(QMMF_EXIF_IFD, QMMF_ID_EXIF_IFD_PTR)
#define QMMF_EXIFTAGTYPE_EXIF_IFD_PTR QMMF_EXIF_LONG

/* ICC_PROFILE (NOT INTENDED to be accessible to user) */
#define QMMF_ID_ICC_PROFILE 0x8773
#define QMMF_EXIFTAGID_ICC_PROFILE \
    QMMF_CONSTRUCT_TAGID(QMMF_ICC_PROFILE, QMMF_ID_ICC_PROFILE)
#define QMMF_EXIFTAGTYPE_ICC_PROFILE QMMF_EXIF_LONG
/**
 * Exposure program
 * Use QMMF_EXIFTAGTYPE_EXPOSURE_PROGRAM as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_EXPOSURE_PROGRAM 0x8822
#define QMMF_EXIFTAGID_EXPOSURE_PROGRAM \
    QMMF_CONSTRUCT_TAGID(QMMF_EXPOSURE_PROGRAM, QMMF_ID_EXPOSURE_PROGRAM)
#define QMMF_EXIFTAGTYPE_EXPOSURE_PROGRAM QMMF_EXIF_SHORT
/**
 * Spectral sensitivity
 * Use QMMF_EXIFTAGTYPE_SPECTRAL_SENSITIVITY as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count can be any
 */
#define QMMF_ID_SPECTRAL_SENSITIVITY 0x8824
#define QMMF_EXIFTAGID_SPECTRAL_SENSITIVITY \
    QMMF_CONSTRUCT_TAGID(QMMF_SPECTRAL_SENSITIVITY, QMMF_ID_SPECTRAL_SENSITIVITY)
#define QMMF_EXIFTAGTYPE_SPECTRAL_SENSITIVITY QMMF_EXIF_ASCII
/* GPS IFD pointer (NOT INTENDED to be accessible to user) */
#define QMMF_ID_GPS_IFD_PTR 0x8825
#define QMMF_EXIFTAGID_GPS_IFD_PTR \
    QMMF_CONSTRUCT_TAGID(QMMF_GPS_IFD, QMMF_ID_GPS_IFD_PTR)
#define QMMF_EXIFTAGTYPE_GPS_IFD_PTR QMMF_EXIF_LONG
/**
 * ISO Speed Rating
 * Use QMMF_EXIFTAGTYPE_ISO_SPEED_RATING as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count can be any
 */
#define QMMF_ID_ISO_SPEED_RATING 0x8827
#define QMMF_EXIFTAGID_ISO_SPEED_RATING \
    QMMF_CONSTRUCT_TAGID(QMMF_ISO_SPEED_RATING, QMMF_ID_ISO_SPEED_RATING)
#define QMMF_EXIFTAGTYPE_ISO_SPEED_RATING QMMF_EXIF_SHORT
/**
 * Optoelectric conversion factor
 * Use QMMF_EXIFTAGTYPE_OECF as the exif_tag_type (QMMF_EXIF_UNDEFINED)
 * Count can be any
 */
#define QMMF_ID_OECF 0x8828
#define QMMF_EXIFTAGID_OECF QMMF_CONSTRUCT_TAGID(QMMF_OECF, QMMF_ID_OECF)
#define QMMF_EXIFTAGTYPE_OECF QMMF_EXIF_UNDEFINED
/**
 * Exif version
 * Use QMMF_EXIFTAGTYPE_EXIF_VERSION as the exif_tag_type (QMMF_EXIF_UNDEFINED)
 * Count should be 4
 */
#define QMMF_ID_EXIF_VERSION 0x9000
#define QMMF_EXIFTAGID_EXIF_VERSION \
    QMMF_CONSTRUCT_TAGID(QMMF_EXIF_VERSION, QMMF_ID_EXIF_VERSION)
#define QMMF_EXIFTAGTYPE_EXIF_VERSION QMMF_EXIF_UNDEFINED
/**
 * Date and time of original data gerneration
 * Use QMMF_EXIFTAGTYPE_EXIF_DATE_TIME_ORIGINAL as the exif_tag_type (QMMF_EXIF_ASCII)
 * It should be 20 characters long including the null-terminating character.
 */
#define QMMF_ID_EXIF_DATE_TIME_ORIGINAL 0x9003
#define QMMF_EXIFTAGID_EXIF_DATE_TIME_ORIGINAL \
    QMMF_CONSTRUCT_TAGID(QMMF_EXIF_DATE_TIME_ORIGINAL, \
            QMMF_ID_EXIF_DATE_TIME_ORIGINAL)
#define QMMF_EXIFTAGTYPE_EXIF_DATE_TIME_ORIGINAL QMMF_EXIF_ASCII
/**
 * Date and time of digital data generation
 * Use QMMF_EXIFTAGTYPE_EXIF_DATE_TIME_DIGITIZED as the exif_tag_type (QMMF_EXIF_ASCII)
 * It should be 20 characters long including the null-terminating character.
 */
#define QMMF_ID_EXIF_DATE_TIME_DIGITIZED 0x9004
#define QMMF_EXIFTAGID_EXIF_DATE_TIME_DIGITIZED \
    QMMF_CONSTRUCT_TAGID(QMMF_EXIF_DATE_TIME_DIGITIZED, \
            QMMF_ID_EXIF_DATE_TIME_DIGITIZED)
#define QMMF_EXIFTAGTYPE_EXIF_DATE_TIME_DIGITIZED QMMF_EXIF_ASCII
/**
 * Meaning of each component
 * Use QMMF_EXIFTAGTYPE_EXIF_COMPONENTS_CONFIG as the exif_tag_type (QMMF_EXIF_UNDEFINED)
 * Count should be 4
 */
#define QMMF_ID_EXIF_COMPONENTS_CONFIG 0x9101
#define QMMF_EXIFTAGID_EXIF_COMPONENTS_CONFIG \
    QMMF_CONSTRUCT_TAGID(QMMF_EXIF_COMPONENTS_CONFIG, \
            QMMF_ID_EXIF_COMPONENTS_CONFIG)
#define QMMF_EXIFTAGTYPE_EXIF_COMPONENTS_CONFIG QMMF_EXIF_UNDEFINED
/**
 * Meaning of Image compression mode
 * Use QMMF_EXIFTAGTYPE_EXIF_COMPRESSED_BITS_PER_PIXEL as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 1
 */
#define QMMF_ID_EXIF_COMPRESSED_BITS_PER_PIXEL 0x9102
#define QMMF_EXIFTAGID_EXIF_COMPRESSED_BITS_PER_PIXEL \
    QMMF_CONSTRUCT_TAGID(QMMF_EXIF_COMPRESSED_BITS_PER_PIXEL, \
            QMMF_ID_EXIF_COMPRESSED_BITS_PER_PIXEL)
#define QMMF_EXIFTAGTYPE_EXIF_COMPRESSED_BITS_PER_PIXEL QMMF_EXIF_RATIONAL
/**
 * Shutter speed
 * Use QMMF_EXIFTAGTYPE_SHUTTER_SPEED as the exif_tag_type (QMMF_EXIF_SRATIONAL)
 * Count should be 1
 */
#define QMMF_ID_SHUTTER_SPEED 0x9201
#define QMMF_EXIFTAGID_SHUTTER_SPEED \
    QMMF_CONSTRUCT_TAGID(QMMF_SHUTTER_SPEED, QMMF_ID_SHUTTER_SPEED)
#define QMMF_EXIFTAGTYPE_SHUTTER_SPEED QMMF_EXIF_SRATIONAL
/**
 * Aperture
 * Use QMMF_EXIFTAGTYPE_APERTURE as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 1
 */
#define QMMF_ID_APERTURE 0x9202
#define QMMF_EXIFTAGID_APERTURE \
    QMMF_CONSTRUCT_TAGID(QMMF_APERTURE, QMMF_ID_APERTURE)
#define QMMF_EXIFTAGTYPE_APERTURE QMMF_EXIF_RATIONAL
/**
 * Brigthness
 * Use QMMF_EXIFTAGTYPE_BRIGHTNESS as the exif_tag_type (QMMF_EXIF_SRATIONAL)
 * Count should be 1
 */
#define QMMF_ID_BRIGHTNESS 0x9203
#define QMMF_EXIFTAGID_BRIGHTNESS \
    QMMF_CONSTRUCT_TAGID(QMMF_BRIGHTNESS, QMMF_ID_BRIGHTNESS)
#define QMMF_EXIFTAGTYPE_BRIGHTNESS QMMF_EXIF_SRATIONAL
/**
 * Exposure bias
 * Use QMMF_EXIFTAGTYPE_EXPOSURE_BIAS_VALUE as the exif_tag_type (QMMF_EXIF_SRATIONAL)
 * Count should be 1
 */
#define QMMF_ID_EXPOSURE_BIAS_VALUE 0x9204
#define QMMF_EXIFTAGID_EXPOSURE_BIAS_VALUE \
    QMMF_CONSTRUCT_TAGID(QMMF_EXPOSURE_BIAS_VALUE, QMMF_ID_EXPOSURE_BIAS_VALUE)
#define QMMF_EXIFTAGTYPE_EXPOSURE_BIAS_VALUE QMMF_EXIF_SRATIONAL
/**
 * Maximum lens aperture
 * Use QMMF_EXIFTAGTYPE_MAX_APERTURE as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 1
 */
#define QMMF_ID_MAX_APERTURE 0x9205
#define QMMF_EXIFTAGID_MAX_APERTURE \
    QMMF_CONSTRUCT_TAGID(QMMF_MAX_APERTURE, QMMF_ID_MAX_APERTURE)
#define QMMF_EXIFTAGTYPE_MAX_APERTURE QMMF_EXIF_RATIONAL
/**
 * Subject distance
 * Use QMMF_EXIFTAGTYPE_SUBJECT_DISTANCE as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 1
 */
#define QMMF_ID_SUBJECT_DISTANCE 0x9206
#define QMMF_EXIFTAGID_SUBJECT_DISTANCE \
    QMMF_CONSTRUCT_TAGID(QMMF_SUBJECT_DISTANCE, QMMF_ID_SUBJECT_DISTANCE)
#define QMMF_EXIFTAGTYPE_SUBJECT_DISTANCE QMMF_EXIF_RATIONAL
/**
 * Metering mode
 * Use QMMF_EXIFTAGTYPE_METERING_MODE as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_METERING_MODE 0x9207
#define QMMF_EXIFTAGID_METERING_MODE \
    QMMF_CONSTRUCT_TAGID(QMMF_METERING_MODE, QMMF_ID_METERING_MODE)
#define QMMF_EXIFTAGTYPE_METERING_MODE QMMF_EXIF_SHORT
/**
 * Light source
 * Use QMMF_EXIFTAGTYPE_LIGHT_SOURCE as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_LIGHT_SOURCE 0x9208
#define QMMF_EXIFTAGID_LIGHT_SOURCE \
    QMMF_CONSTRUCT_TAGID(QMMF_LIGHT_SOURCE, QMMF_ID_LIGHT_SOURCE)
#define QMMF_EXIFTAGTYPE_LIGHT_SOURCE QMMF_EXIF_SHORT
/**
 * Flash
 * Use QMMF_EXIFTAGTYPE_FLASH as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_FLASH 0x9209
#define QMMF_EXIFTAGID_FLASH QMMF_CONSTRUCT_TAGID(QMMF_FLASH, QMMF_ID_FLASH)
#define QMMF_EXIFTAGTYPE_FLASH QMMF_EXIF_SHORT
/**
 * Lens focal length
 * Use QMMF_EXIFTAGTYPE_FOCAL_LENGTH as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 1
 */
#define QMMF_ID_FOCAL_LENGTH 0x920a
#define QMMF_EXIFTAGID_FOCAL_LENGTH \
    QMMF_CONSTRUCT_TAGID(QMMF_FOCAL_LENGTH, QMMF_ID_FOCAL_LENGTH)
#define QMMF_EXIFTAGTYPE_FOCAL_LENGTH QMMF_EXIF_RATIONAL
/**
 * Subject area
 * Use QMMF_EXIFTAGTYPE_SUBJECT_AREA as exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 2 or 3 or 4
 */
#define QMMF_ID_SUBJECT_AREA 0x9214
#define QMMF_EXIFTAGID_SUBJECT_AREA \
    QMMF_CONSTRUCT_TAGID(QMMF_SUBJECT_AREA, QMMF_ID_SUBJECT_AREA)
#define QMMF_EXIFTAGTYPE_SUBJECT_AREA QMMF_EXIF_SHORT
/**
 * Maker note
 * Use QMMF_EXIFTAGTYPE_EXIF_MAKER_NOTE as the exif_tag_type (QMMF_EXIF_UNDEFINED)
 * Count can be any
 */
#define QMMF_ID_EXIF_MAKER_NOTE 0x927c
#define QMMF_EXIFTAGID_EXIF_MAKER_NOTE \
    QMMF_CONSTRUCT_TAGID(QMMF_EXIF_MAKER_NOTE, QMMF_ID_EXIF_MAKER_NOTE)
#define QMMF_EXIFTAGTYPE_EXIF_MAKER_NOTE QMMF_EXIF_UNDEFINED
/**
 * User comments
 * Use QMMF_EXIFTAGTYPE_EXIF_USER_COMMENT as the exif_tag_type (QMMF_EXIF_UNDEFINED)
 * Count can be any
 */
#define QMMF_ID_EXIF_USER_COMMENT 0x9286
#define QMMF_EXIFTAGID_EXIF_USER_COMMENT \
    QMMF_CONSTRUCT_TAGID(QMMF_EXIF_USER_COMMENT, QMMF_ID_EXIF_USER_COMMENT)
#define QMMF_EXIFTAGTYPE_EXIF_USER_COMMENT QMMF_EXIF_UNDEFINED
/**
 * Date time sub-seconds
 * Use QMMF_EXIFTAGTYPE_SUBSEC_TIME as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count could be any
 */
#define QMMF_ID_SUBSEC_TIME 0x9290
#define QMMF_EXIFTAGID_SUBSEC_TIME \
    QMMF_CONSTRUCT_TAGID(QMMF_SUBSEC_TIME, QMMF_ID_SUBSEC_TIME)
#define QMMF_EXIFTAGTYPE_SEBSEC_TIME QMMF_EXIF_ASCII
/**
 * Date time original sub-seconds
 * use QMMF_EXIFTAGTYPE_SUBSEC_TIME_ORIGINAL as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count could be any
 */
#define QMMF_ID_SUBSEC_TIME_ORIGINAL 0x9291
#define QMMF_EXIFTAGID_SUBSEC_TIME_ORIGINAL \
    QMMF_CONSTRUCT_TAGID(QMMF_SUBSEC_TIME_ORIGINAL, QMMF_ID_SUBSEC_TIME_ORIGINAL)
#define QMMF_EXIFTAGTYPE_SUBSEC_TIME_ORIGINAL QMMF_EXIF_ASCII
/**
 * Date time digitized sub-seconds
 * use QMMF_EXIFTAGTYPE_SUBSEC_TIME_DIGITIZED as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count could be any
 */
#define QMMF_ID_SUBSEC_TIME_DIGITIZED 0x9292
#define QMMF_EXIFTAGID_SUBSEC_TIME_DIGITIZED \
    QMMF_CONSTRUCT_TAGID(QMMF_SUBSEC_TIME_DIGITIZED, QMMF_ID_SUBSEC_TIME_DIGITIZED)
#define QMMF_EXIFTAGTYPE_SUBSEC_TIME_DIGITIZED QMMF_EXIF_ASCII
/**
 * Supported Flashpix version
 * Use QMMF_EXIFTAGTYPE_EXIF_FLASHPIX_VERSION as the exif_tag_type (QMMF_EXIF_UNDEFINED)
 * Count should be 4
 */
#define QMMF_ID_EXIF_FLASHPIX_VERSION 0xa000
#define QMMF_EXIFTAGID_EXIF_FLASHPIX_VERSION \
    QMMF_CONSTRUCT_TAGID(QMMF_EXIF_FLASHPIX_VERSION, QMMF_ID_EXIF_FLASHPIX_VERSION)
#define QMMF_EXIFTAGTYPE_EXIF_FLASHPIX_VERSION QMMF_EXIF_UNDEFINED
/**
 * Color space information
 * Use QMMF_EXIFTAGTYPE_EXIF_COLOR_SPACE as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_EXIF_COLOR_SPACE 0xa001
#define QMMF_EXIFTAGID_EXIF_COLOR_SPACE \
    QMMF_CONSTRUCT_TAGID(QMMF_EXIF_COLOR_SPACE, QMMF_ID_EXIF_COLOR_SPACE)
#define QMMF_EXIFTAGTYPE_EXIF_COLOR_SPACE QMMF_EXIF_SHORT
/**
 * Valid image width
 * Use QMMF_EXIFTAGTYPE_EXIF_PIXEL_X_DIMENSION as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_EXIF_PIXEL_X_DIMENSION 0xa002
#define QMMF_EXIFTAGID_EXIF_PIXEL_X_DIMENSION \
    QMMF_CONSTRUCT_TAGID(QMMF_EXIF_PIXEL_X_DIMENSION, \
            QMMF_ID_EXIF_PIXEL_X_DIMENSION)
#define QMMF_EXIFTAGTYPE_EXIF_PIXEL_X_DIMENSION QMMF_EXIF_SHORT
/**
 * Valid image height
 * Use QMMF_EXIFTAGTYPE_EXIF_PIXEL_Y_DIMENSION as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_EXIF_PIXEL_Y_DIMENSION 0xa003
#define QMMF_EXIFTAGID_EXIF_PIXEL_Y_DIMENSION \
    QMMF_CONSTRUCT_TAGID(QMMF_EXIF_PIXEL_Y_DIMENSION, \
            QMMF_ID_EXIF_PIXEL_Y_DIMENSION)
#define QMMF_EXIFTAGTYPE_EXIF_PIXEL_Y_DIMENSION  QMMF_EXIF_SHORT
/**
 * Related audio file
 * Use QMMF_EXIFTAGTYPE_EXIF_RELATED_SOUND_FILE as the exif_tag_type (QMMF_EXIF_ASCII)
 * Count should be 13
 */
#define QMMF_ID_RELATED_SOUND_FILE 0xa004
#define QMMF_EXIFTAGID_RELATED_SOUND_FILE \
    QMMF_CONSTRUCT_TAGID(QMMF_RELATED_SOUND_FILE, QMMF_ID_RELATED_SOUND_FILE)
#define QMMF_EXIFTAGTYPE_RELATED_SOUND_FILE QMMF_EXIF_ASCII
/* Interop IFD pointer (NOT INTENDED to be accessible to user) */
#define QMMF_ID_INTEROP_IFD_PTR 0xa005
#define QMMF_EXIFTAGID_INTEROP_IFD_PTR \
    QMMF_CONSTRUCT_TAGID(QMMF_INTEROP, QMMF_ID_INTEROP_IFD_PTR)
#define QMMF_EXIFTAGTYPE_INTEROP_IFD_PTR QMMF_EXIF_LONG
/**
 * Flash energy
 * Use QMMF_EXIFTAGTYPE_EXIF_FLASH_ENERGY as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 1
 */
#define QMMF_ID_FLASH_ENERGY 0xa20b
#define QMMF_EXIFTAGID_FLASH_ENERGY \
    QMMF_CONSTRUCT_TAGID(QMMF_FLASH_ENERGY, QMMF_ID_FLASH_ENERGY)
#define QMMF_EXIFTAGTYPE_FLASH_ENERGY QMMF_EXIF_RATIONAL
/**
 * Spatial frequency response
 * Use QMMF_EXIFTAGTYPE_SPATIAL_FREQ_RESPONSE as exif_tag_type (QMMF_EXIF_UNDEFINED)
 * Count would be any
 */
#define QMMF_ID_SPATIAL_FREQ_RESPONSE 0xa20c
#define QMMF_EXIFTAGID_SPATIAL_FREQ_RESPONSE \
    QMMF_CONSTRUCT_TAGID(QMMF_SPATIAL_FREQ_RESPONSE, QMMF_ID_SPATIAL_FREQ_RESPONSE)
#define QMMF_EXIFTAGTYPE_SPATIAL_FREQ_RESPONSE QMMF_EXIF_UNDEFINED
/**
 * Focal plane x resolution
 * Use QMMF_EXIFTAGTYPE_FOCAL_PLANE_X_RESOLUTION as exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 1
 */
#define QMMF_ID_FOCAL_PLANE_X_RESOLUTION 0xa20e
#define QMMF_EXIFTAGID_FOCAL_PLANE_X_RESOLUTION \
    QMMF_CONSTRUCT_TAGID(QMMF_FOCAL_PLANE_X_RESOLUTION, \
            QMMF_ID_FOCAL_PLANE_X_RESOLUTION)
#define QMMF_EXIFTAGTYPE_FOCAL_PLANE_X_RESOLUTION QMMF_EXIF_RATIONAL
/**
 * Focal plane y resolution
 * Use QMMF_EXIFTAGTYPE_FOCAL_PLANE_Y_RESOLUTION as exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 1
 */
#define QMMF_ID_FOCAL_PLANE_Y_RESOLUTION 0xa20f
#define QMMF_EXIFTAGID_FOCAL_PLANE_Y_RESOLUTION \
    QMMF_CONSTRUCT_TAGID(QMMF_FOCAL_PLANE_Y_RESOLUTION, \
            QMMF_ID_FOCAL_PLANE_Y_RESOLUTION)
#define QMMF_EXIFTAGTYPE_FOCAL_PLANE_Y_RESOLUTION QMMF_EXIF_RATIONAL
/**
 * Focal plane  resolution unit
 * Use QMMF_EXIFTAGTYPE_FOCAL_PLANE_RESOLUTION_UNIT as exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_FOCAL_PLANE_RESOLUTION_UNIT 0xa210
#define QMMF_EXIFTAGID_FOCAL_PLANE_RESOLUTION_UNIT \
    QMMF_CONSTRUCT_TAGID(QMMF_FOCAL_PLANE_RESOLUTION_UNIT, \
            QMMF_ID_FOCAL_PLANE_RESOLUTION_UNIT)
#define QMMF_EXIFTAGTYPE_FOCAL_PLANE_RESOLUTION_UNIT QMMF_EXIF_SHORT
/**
 * Subject location
 * Use QMMF_EXIFTAGTYPE_SUBJECT_LOCATION as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 2
 */
#define QMMF_ID_SUBJECT_LOCATION 0xa214
#define QMMF_EXIFTAGID_SUBJECT_LOCATION \
    QMMF_CONSTRUCT_TAGID(QMMF_SUBJECT_LOCATION, QMMF_ID_SUBJECT_LOCATION)
#define QMMF_EXIFTAGTYPE_SUBJECT_LOCATION QMMF_EXIF_SHORT
/**
 * Exposure index
 * Use QMMF_EXIFTAGTYPE_EXPOSURE_INDEX as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 1
 */
#define QMMF_ID_EXPOSURE_INDEX 0xa215
#define QMMF_EXIFTAGID_EXPOSURE_INDEX \
    QMMF_CONSTRUCT_TAGID(QMMF_EXPOSURE_INDEX, QMMF_ID_EXPOSURE_INDEX)
#define QMMF_EXIFTAGTYPE_EXPOSURE_INDEX QMMF_EXIF_RATIONAL
/**
 * Sensing method
 * Use QMMF_EXIFTAGTYPE_SENSING_METHOD as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_SENSING_METHOD 0xa217
#define QMMF_EXIFTAGID_SENSING_METHOD \
    QMMF_CONSTRUCT_TAGID(QMMF_SENSING_METHOD, QMMF_ID_SENSING_METHOD)
#define QMMF_EXIFTAGTYPE_SENSING_METHOD QMMF_EXIF_SHORT
/**
 * File source
 * Use QMMF_EXIFTAGTYPE_FILE_SOURCE as the exif_tag_type (QMMF_EXIF_UNDEFINED)
 * Count should be 1
 */
#define QMMF_ID_FILE_SOURCE 0xa300
#define QMMF_EXIFTAGID_FILE_SOURCE \
    QMMF_CONSTRUCT_TAGID(QMMF_FILE_SOURCE, QMMF_ID_FILE_SOURCE)
#define QMMF_EXIFTAGTYPE_FILE_SOURCE QMMF_EXIF_UNDEFINED
/**
 * Scene type
 * Use QMMF_EXIFTAGTYPE_SCENE_TYPE as the exif_tag_type (QMMF_EXIF_UNDEFINED)
 * Count should be 1
 */
#define QMMF_ID_SCENE_TYPE 0xa301
#define QMMF_EXIFTAGID_SCENE_TYPE \
    QMMF_CONSTRUCT_TAGID(QMMF_SCENE_TYPE, QMMF_ID_SCENE_TYPE)
#define QMMF_EXIFTAGTYPE_SCENE_TYPE QMMF_EXIF_UNDEFINED
/**
 * CFA pattern
 * Use QMMF_EXIFTAGTYPE_CFA_PATTERN as the exif_tag_type (QMMF_EXIF_UNDEFINED)
 * Count can be any
 */
#define QMMF_ID_CFA_PATTERN 0xa302
#define QMMF_EXIFTAGID_CFA_PATTERN \
    QMMF_CONSTRUCT_TAGID(QMMF_CFA_PATTERN, QMMF_ID_CFA_PATTERN)
#define QMMF_EXIFTAGTYPE_CFA_PATTERN QMMF_EXIF_UNDEFINED
/**
 * Custom image processing
 * Use QMMF_EXIFTAGTYPE_CUSTOM_RENDERED as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_CUSTOM_RENDERED 0xa401
#define QMMF_EXIFTAGID_CUSTOM_RENDERED \
    QMMF_CONSTRUCT_TAGID(QMMF_CUSTOM_RENDERED, QMMF_ID_CUSTOM_RENDERED)
#define QMMF_EXIFTAGTYPE_CUSTOM_RENDERED QMMF_EXIF_SHORT
/**
 * Exposure mode
 * Use QMMF_EXIFTAGTYPE_EXPOSURE_MODE as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_EXPOSURE_MODE 0xa402
#define QMMF_EXIFTAGID_EXPOSURE_MODE \
    QMMF_CONSTRUCT_TAGID(QMMF_EXPOSURE_MODE, QMMF_ID_EXPOSURE_MODE)
#define QMMF_EXIFTAGTYPE_EXPOSURE_MODE QMMF_EXIF_SHORT
/**
 * White balance
 * Use QMMF_EXIFTAGTYPE_WHITE_BALANCE as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_WHITE_BALANCE 0xa403
#define QMMF_EXIFTAGID_WHITE_BALANCE \
    QMMF_CONSTRUCT_TAGID(QMMF_WHITE_BALANCE, QMMF_ID_WHITE_BALANCE)
#define QMMF_EXIFTAGTYPE_WHITE_BALANCE QMMF_EXIF_SHORT
/**
 * Digital zoom ratio
 * Use QMMF_EXIFTAGTYPE_DIGITAL_ZOOM_RATIO as the exif_tag_type (QMMF_EXIF_RATIONAL)
 * Count should be 1
 */
#define QMMF_ID_DIGITAL_ZOOM_RATIO 0xa404
#define QMMF_EXIFTAGID_DIGITAL_ZOOM_RATIO \
    QMMF_CONSTRUCT_TAGID(QMMF_DIGITAL_ZOOM_RATIO, QMMF_ID_DIGITAL_ZOOM_RATIO)
#define QMMF_EXIFTAGTYPE_DIGITAL_ZOOM_RATIO QMMF_EXIF_RATIONAL
/**
 * Focal length in 35mm film
 * Use QMMF_EXIFTAGTYPE_FOCAL_LENGTH_35MM as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_FOCAL_LENGTH_35MM 0xa405
#define QMMF_EXIFTAGID_FOCAL_LENGTH_35MM \
    QMMF_CONSTRUCT_TAGID(QMMF_FOCAL_LENGTH_35MM, QMMF_ID_FOCAL_LENGTH_35MM)
#define QMMF_EXIFTAGTYPE_FOCAL_LENGTH_35MM QMMF_EXIF_SHORT
/**
 * Scene capture type
 * Use QMMF_EXIFTAGTYPE_SCENE_CAPTURE_TYPE as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_SCENE_CAPTURE_TYPE 0xa406
#define QMMF_EXIFTAGID_SCENE_CAPTURE_TYPE \
    QMMF_CONSTRUCT_TAGID(QMMF_SCENE_CAPTURE_TYPE, QMMF_ID_SCENE_CAPTURE_TYPE)
#define QMMF_EXIFTAGTYPE_SCENE_CAPTURE_TYPE QMMF_EXIF_SHORT
/**
 * Gain control
 * Use QMMF_EXIFTAGTYPE_GAIN_CONTROL as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_GAIN_CONTROL 0xa407
#define QMMF_EXIFTAGID_GAIN_CONTROL \
    QMMF_CONSTRUCT_TAGID(QMMF_GAIN_CONTROL, QMMF_ID_GAIN_CONTROL)
#define QMMF_EXIFTAGTYPE_GAIN_CONTROL QMMF_EXIF_SHORT
/**
 * Contrast
 * Use QMMF_EXIFTAGTYPE_CONTRAST as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_CONTRAST 0xa408
#define QMMF_EXIFTAGID_CONTRAST \
    QMMF_CONSTRUCT_TAGID(QMMF_CONTRAST, QMMF_ID_CONTRAST)
#define QMMF_EXIFTAGTYPE_CONTRAST QMMF_EXIF_SHORT
/**
 * Saturation
 * Use QMMF_EXIFTAGTYPE_SATURATION as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_SATURATION  0xa409
#define QMMF_EXIFTAGID_SATURATION \
    QMMF_CONSTRUCT_TAGID(QMMF_SATURATION, QMMF_ID_SATURATION)
#define QMMF_EXIFTAGTYPE_SATURATION QMMF_EXIF_SHORT
/**
 * Sharpness
 * Use QMMF_EXIFTAGTYPE_SHARPNESS as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_SHARPNESS 0xa40a
#define QMMF_EXIFTAGID_SHARPNESS \
    QMMF_CONSTRUCT_TAGID(QMMF_SHARPNESS, QMMF_ID_SHARPNESS)
#define QMMF_EXIFTAGTYPE_SHARPNESS QMMF_EXIF_SHORT
/**
 * Device settings description
 * Use QMMF_EXIFTAGID_DEVICE_SETTINGS_DESCRIPTION as exif_tag_type (QMMF_EXIF_UNDEFINED)
 * Count could be any
 */
#define QMMF_ID_DEVICE_SETTINGS_DESCRIPTION 0xa40b
#define QMMF_EXIFTAGID_DEVICE_SETTINGS_DESCRIPTION \
    QMMF_CONSTRUCT_TAGID(QMMF_DEVICE_SETTINGS_DESCRIPTION, \
            QMMF_ID_DEVICE_SETTINGS_DESCRIPTION)
#define QMMF_EXIFTAGTYPE_DEVIC_SETTIGNS_DESCRIPTION QMMF_EXIF_UNDEFINED
/**
 * Subject distance range
 * Use QMMF_EXIFTAGTYPE_SUBJECT_DISTANCE_RANGE as the exif_tag_type (QMMF_EXIF_SHORT)
 * Count should be 1
 */
#define QMMF_ID_SUBJECT_DISTANCE_RANGE 0xa40c
#define QMMF_EXIFTAGID_SUBJECT_DISTANCE_RANGE \
    QMMF_CONSTRUCT_TAGID(QMMF_SUBJECT_DISTANCE_RANGE, \
            QMMF_ID_SUBJECT_DISTANCE_RANGE)
#define QMMF_EXIFTAGTYPE_SUBJECT_DISTANCE_RANGE QMMF_EXIF_SHORT
/**
 * Unique image id
 * Use EXIFTAG_TYPE_IMAGE_UIDas the exif_tag_type (QMMF_EXIF_ASCII)
 * Count should be 33
 */
#define QMMF_ID_IMAGE_UID 0xa420
#define QMMF_EXIFTAGID_IMAGE_UID \
    QMMF_CONSTRUCT_TAGID(QMMF_IMAGE_UID, QMMF_ID_IMAGE_UID)
#define QMMF_EXIFTAGTYPE_IMAGE_UID QMMF_EXIF_ASCII
/**
 * PIM tag
 * Use QMMF_EXIFTAGTYPE_PIM_TAG as the exif_tag_type (QMMF_EXIF_UNDEFINED)
 * Count can be any
 */
#define QMMF_ID_PIM 0xc4a5
#define QMMF_EXIFTAGID_PIM_TAG QMMF_CONSTRUCT_TAGID(QMMF_PIM, QMMF_ID_PIM)
#define QMMF_EXIFTAGTYPE_PIM_TAG QMMF_EXIF_UNDEFINED
